{"version":3,"sources":["../../node_modules/classnames/index.js","../../src/Colors.tsx","../../src/Input/Select.tsx","../../src/Input/index.tsx","../../src/Input/Date.tsx","../../src/Input/File.tsx","../../src/Input/Checkbox.tsx","../../src/Input/TextArea.tsx","../../src/Input/Input.tsx","../../src/Icon.tsx","../../src/Field/Hint.tsx","../../src/Field/index.tsx","../../src/Form.tsx","../../src/DynamicForm.tsx","examples/login.tsx","examples/basic.tsx","examples/other.tsx","examples/dynamic.tsx","App.tsx","index.tsx"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","window","getSelect","isMulti","Select","props","customStyles","control","background","borderBottom","borderColor","cursor","display","paddingTop","transition","indicatorSeparator","indicatorsContainer","input","provided","color","marginTop","width","multiValue","COLORS","marginBottom","marginRight","multiValueLabel","multiValueRemove","opacity","option","state","padding","placeholder","singleValue","overflow","position","textOverflow","whiteSpace","valueContainer","alignItems","margin","options","value","label","name","menuPlacement","styles","isDisabled","disabled","onFocus","onBlur","onChange","item","values","it","v","Tags","type","inputProps","isFocused","colors","getBorderColor","React","DatePickerWrapperStyles","createGlobalStyle","className","datepicker","selected","Date","undefined","date","onCalendarClose","dateFormat","format","wrapperClassName","popperPlacement","ref","createRef","ref2","onCancel","document","required","max","min","autoComplete","style","multiple","accept","ev","files","autocomplete","cl","hasHint","f","readOnly","File","id","isChecked","checked","Checkbox","TextArea","parseFloat","Input","library","Icon","icon","fontSize","paddingBottom","Hint","isTyping","isError","errors","refTarget","refPopper","useEffect","createPopper","placement","backgroundColor","message","disallowedTypes","allowDangerousHtml","unwrapDisallowed","Field","constructor","typingTimeout","getStateAndValidate","validate","componentDidUpdate","prevProps","newState","isDirty","a","clearTimeout","setTimeout","validator","renderStateIcon","renderInput","help","isErrored","renderLabel","isEmpty","flex","renderCheckbox","htmlFor","render","hasIcon","Component","Form","propagateOnChange","isValid","b","fields","field","flexBasis","formValue","getField","validity","something","Promise","validateField","this","FieldWrapper","DynamicForm","cleanFields","cleanValue","nextFields","isPresent","promises","condition","partials","re","subfields","sf","keys","accum","nextValue","clone","title","description","source","trim","initialState","tileClass","size","found","citiesOptions","cities","filter","isFound","slice","map","city","childrenCount","when","typeA","indent","code","level","split","l","repeat","trimEnd","Example","useState","setIsValid","setValue","flexDirection","float","onClick","language","dark","github","JSON","stringify","borderRadius","genSource","App","examples","ReactDOM","getElementById"],"mappings":";wgqmBAOC,WAGA,IAAIA,EAAS,GAAGC,eAEhB,SAASC,IAGR,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAC1C,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CAEA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BL,EAAQM,KAAKF,QACP,GAAIG,MAAMC,QAAQJ,IACxB,GAAIA,EAAID,OAAQ,CACf,IAAIM,EAAQV,EAAWW,MAAM,KAAMN,GAC/BK,GACHT,EAAQM,KAAKG,SAGT,GAAgB,WAAZJ,EACV,GAAID,EAAIO,WAAaC,OAAOC,UAAUF,SACrC,IAAK,IAAIG,KAAOV,EACXP,EAAOkB,KAAKX,EAAKU,IAAQV,EAAIU,IAChCd,EAAQM,KAAKQ,QAIfd,EAAQM,KAAKF,EAAIO,aAKpB,OAAOX,EAAQgB,KAAK,KAGgBC,EAAOC,SAC3CnB,EAAWoB,QAAUpB,EACrBkB,EAAA,QAAiBlB,GAOjBqB,OAAOrB,WAAaA,EAhDrB,MCPD,EAAe,UAAf,EAES,UCGT,SAASsB,IAAT,IAAsBC,EAAtB,wDACQC,EAAUC,Y,MACRC,EAA4C,CAChDC,QAAS,iBAAO,CACdC,WADc,kBAEdC,aAFc,eAGdC,YAAaL,EAHC,YAIdM,OAJc,OAKdC,QALc,OAMdC,WAAYV,EAAU,QANR,IAOdW,WAAY,qBAEdC,mBAAoB,iBAAO,CAAEH,QAAS,SACtCI,oBAAqB,iBAAO,CAAEJ,QAAS,SACvCK,MAAQC,YAAD,mBAAC,eAAmB,GAApB,IAELC,MAFyB,UAGzBC,UAAWjB,EAAU,OAHI,QAIzBkB,MAAO,SAETC,WAAY,uBAAO,CACjBd,YAAY,UAAAH,EAAA,sCAAwBkB,EACpCX,QAFiB,OAGjBY,aAHiB,QAIjBC,YAAa,UAEfC,gBAAkBR,YAAD,mBAAC,eAAmB,GAApB,IAEfC,MAAO,aAETQ,iBAAmBT,YAAD,mBAAC,eAAmB,GAApB,IAEhB,UAAW,CACTV,WADS,OAETG,OAFS,UAGTiB,QAAS,GAEXT,MAPoC,qBAQpCS,QAAS,MAEXC,OAAQ,4BAAoB,CAC1BrB,WAAYsB,cACR,UAAAzB,EAAA,sCAAwBkB,EACxBO,cACC,UAAAzB,EAAA,sCAAwBkB,GADzBO,KAHsB,QAM1BX,MAAOW,qBANmB,OAO1BC,QAAS,iBAEXC,YAAa,iBAAO,CAAEpB,QAAS,SAC/BqB,YAAa,uBAAO,CAClBd,MAAOd,aAAkB,UAAAA,EAAA,qCAAuBkB,EAD9B,UAElBW,SAFkB,SAGlBC,SAHkB,WAIlBC,aAJkB,WAKlBC,WALkB,SAMlBhB,MAAO,SAETiB,eAAiBpB,YAAD,mBAAC,eAAmB,GAApB,IAEdqB,WAAYpC,EAAU,QAFY,WAGlCqC,OAHkC,IAIlCpB,UAJkC,QAKlCW,QAAS,QAYPU,EAAO,UAAGpC,EAAH,4BAAG,OAAmB,gBAAC,EAAD,EAAC,MAAD,MAAuB,CAAEqC,QAAOC,MAAhC,EAAUA,OAAsCD,MAC7EA,EAAK,OAAGD,QAAH,IAAGA,OAAH,EAAGA,UAAiBZ,YAAD,OAC5BzC,cAAciB,EAAdjB,OAA6BiB,iBAAqBwB,EAAlDzC,OAAkEyC,UAAiBxB,EADrF,SAGA,OACE,uBACEuC,KAAMvC,EAAMuC,KACZC,cAAc,SACdJ,QAASA,EACTK,OAAQxC,EACRH,QAASA,EACT4C,WAAY1C,EAAM2C,SAClBC,QAAS5C,EAAM4C,QACfC,OAAQ7C,EAAM6C,OACdC,SAvBcC,YAChB,KAAa,CACX,IAAMC,EAAN,GACA,YAAKD,OAAUE,YAAD,OAAaA,EAA3B,mBAAuDC,YAAD,OAAQF,MAA9D,KACAhD,WAAeZ,YAAfY,SAEAA,WAAe+C,GAAQA,EAAvB/C,QAkBAqC,MAAOA,KAIb,SAGK,I,GAAMc,GAAOtD,GAAb,GAEME,GAASF,I,wCCtFtB,GAAgBG,YACd,IAAM,EAAN,EAAM,QAAWoD,EAAjB,EAAiBA,KACXC,EAAa,8BAVGrD,YACtB,IAAM,EAAN,EAAM,SAAN,EAAM,UAAqBsD,EAA3B,EAA2BA,UACvBjD,EAAJ,UAGA,OAFA,EAAeA,GAAc,OAAAkD,QAAM,IAANA,OAAA,EAAAA,EAAA,QAAiBrC,EACrCoC,IAAWjD,GAAc,OAAAkD,QAAM,IAANA,OAAA,EAAAA,EAAA,SAAkBrC,GAC7C,CAAEb,eAKyBmD,CAAexD,IACjD,SACE,SAAIoD,EAAwBK,sCAAP,IACdA,sCAAP,IAEF,SAAIL,EClBapD,YACjB,IAAM0D,EAA0BC,YAAH,sKAMT3D,EANpB,aAaA,OACE,yBAAK4D,UAAWnB,GAAOoB,YACrB,uBACEC,SAAU9D,QAAc,IAAI+D,KAAK/D,EAAvBA,YAAsCgE,EAChDlB,SARYmB,YAChBjE,eAQI4C,QAAS5C,EAAM4C,QACfsB,gBAAiBlE,EAAM6C,OACvBA,OAAQ7C,EAAM6C,OACdsB,WAAYnE,EAAMoE,OAClBC,iBAAkB,cAClBC,gBAAgB,iBAElBb,oBAZJ,ODI4BM,CAAP,GACrB,UAAIX,EErBapD,YAAD,M,EACVuE,EAAMC,sBACNC,EAAOD,sBAWPE,EAAW,WACf1E,WACA2E,4BAEF,OACE,kCACE,2BACEC,SAAU5E,EAAM4E,SAChBjC,SAAU3C,EAAM2C,SAChBkC,IAAK7E,EAAM6E,IACXC,IAAK9E,EAAM8E,IACXvC,KAAMvC,EAAMuC,KACZwC,kBAAcf,EACd3B,MAAM,GACNkC,IAAKA,EACLS,MAAO,CAAEzE,QAAS,QAClB6C,KAAK,OACL6B,UAAU,EACVC,QAAQ,UAAAlF,EAAA,kDAA+BgE,EACvClB,SAvBqCqC,YACzC,IAAMC,EAAQD,SAAd,MACAnF,4BAsBI6C,OAAQ6B,IAEV,2BACEK,aAAc/E,EAAMqF,aACpBzB,UAAW0B,GAAE,mBACV7C,GAAD,UAAoBzC,EADR,WAAD,cAEVyC,GAAD,QAAkBzC,EAAMuF,SAFb,IAIbP,MAAO,CAAE3E,YAAaL,EAAf,YAAkCc,MAAO,WAChDuB,MAAOrC,QAAcA,aAAiBwF,YAAD,iBAAiBA,EAAjCxF,KAAgB,QAAhBA,KAAdA,WAAuEgE,EAC9EO,IAAKE,EACL7B,QAzC+C,W,QACnD,UAAA6B,EAAA,+BACA,UAAAF,EAAA,gCACAvE,YACA2E,yBAsCIc,UAAU,KFxBaC,CAAP,GACtB,UAAItC,EGxBiBpD,YAMrB,OACE,2BACE4E,SAAU5E,EAAM4E,SAChBjC,SAAU3C,EAAM2C,SAChBkC,IAAK7E,EAAM6E,IACXC,IAAK9E,EAAM8E,IACXvC,KAAMvC,EAAMuC,KACZoD,GAAI3F,EAAMuC,KACVwC,aAAc/E,EAAMqF,aACpBjC,KAAK,WAELN,SAhBuCqC,YACzC,IAAMS,IAAcT,SAApB,QACAnF,eAeE6F,UAAW7F,EAAMqC,MACjBA,MAAO,KHKkByD,CAAP,GACtB,mBAAI1C,EIvBYpD,YAAD,MACf,OACE,8BACE4E,SAAU5E,EAAM4E,SAChBjC,SAAU3C,EAAM2C,SAChBJ,KAAMvC,EAAMuC,KACZqB,UAAW0B,GAAE,mBACV7C,GAAD,UAAoBzC,EADR,WAAD,cAEVyC,GAAD,QAAkBzC,EAAMuF,SAFb,IAIbP,MAAO,CAAE3E,YAAaL,EAAf,YAAkCc,MAAO,WAChDiE,aAAc/E,EAAMqF,aACpBhD,MAAOrC,SAAe,GACtB4C,QAAS5C,EAAM4C,QACfC,OAAQ7C,EAAM6C,OACdC,SAAWqC,YAAD,OAAQnF,WAAemF,SAAfnF,UJQgB+F,CAAP,GKtBZ/F,YAAD,MACVuD,EAAR,EAAQA,OACJzC,EAAJ,UACId,EAAJ,YAAqBc,GAAQ,OAAAyC,QAAM,IAANA,OAAA,EAAAA,EAAA,QAAiBrC,GAQ9C,OACE,2BACE0D,SAAU5E,EAAM4E,SAChBjC,SAAU3C,EAAM2C,SAChBkC,IAAK7E,EAAM6E,IACXC,IAAK9E,EAAM8E,IACXvC,KAAMvC,EAAMuC,KACZqB,UAAW0B,GAAE,mBACV7C,GAAD,UAAoBzC,EADR,WAAD,cAEVyC,GAAD,QAAkBzC,EAAMuF,SAFb,IAIbP,MAAO,CAAE3E,YAAaL,EAAf,YAAkCc,SACzCiE,aAAc/E,EAAMqF,aACpBjC,KAAMpD,QAAc,OACpBqC,MAAOrC,SAAe,GACtB4C,QAAS5C,EAAM4C,QACfC,OAAQ7C,EAAM6C,OACdC,SAvBuCqC,YACzC,IAAI9C,EAAQ8C,SAAZ,MACA,WAAInF,SAAyBqC,EAAQ2D,WAAR3D,IAC7BrC,iBLeKiG,CAAP,IMnBFC,aAEA,IAAMC,GAAQnG,YAAD,OACX,uBAAiBoG,KAAMpG,EAAM2F,GAAWX,MAAO,CAAElE,MAAF,UAAoBuF,SAApB,QAAuCC,cAAe,YCNvG,SAASC,GAAT,GACE,IAAM,EAAN,EAAM,SAAN,EAAM,SAAN,EAAM,OAAN,EAAM,UAAN,EAAM,UAA4CC,EAAlD,EAAkDA,SAC5CC,IAAYC,EAAF,YAAhB,EAEMC,EAAYnC,sBACZoC,EAAYpC,sBAElBqC,qBAAU,WACJF,WAAqBC,EAAzB,SACEE,YAAaH,EAAD,QAAoBC,EAApB,QAAuC,CAAEG,UAAW,gBAFpEF,IAMA,IAAIG,OAAJ,EACA,EAAaA,GAAkB,OAAAzD,QAAM,IAANA,OAAA,EAAAA,EAAA,QAAiBrC,EACvCoC,IAAW0D,GAAkB,OAAAzD,QAAM,IAANA,OAAA,EAAAA,EAAA,SAAkBrC,GACxD,IAAM+F,EAAUR,EAAUC,OAAH,QAAvB,EAEA,OACE,kCACE,yBAAK9C,UAAWnB,EAAmB8B,IAAKoC,IACxC,yBAAK/C,UAAWnB,EAAa8B,IAAKqC,EAAW5B,MAAO,CAAEgC,oBACpD,uBAAuBE,gBAAiB,CAAC,aAAcC,oBAAkB,EAACC,kBAAgB,GACvF9D,GAAY2D,GAFjB,IAIE,yBAAKrD,UAAWnB,E,2BCtBxB,IAKa4E,G,kDAIXC,WAAYtH,S,EAAAA,2BACV,iB,iBAHM,EAAAuH,mBAAA,EAOA,EAAAC,oBAAuBxH,YAC7B,IAAMyB,EAAQ,2BACT4F,EADS,cAAH,IAEThF,MAAOrC,EAAMqC,QAGf,OADA,cACA,GAGK,EAAAoF,SAAW,eAACzH,EAAD,uDAAsB,EAAtB,MAChBA,YAAgBA,EAAhBA,aAAwC0G,YAAD,OAAY,WAAc,CAAEA,OAAQA,GAAU,SAGhF,EAAAgB,mBAAsBC,YAC3B,GAAIA,UAAoB,QAAxB,MAA0C,CACxC,IAAMC,EAAW,2BACZ,sBAAyB,EADb,QAAH,IAEZC,QAAS,QAFM,QAGfvE,UAAW,QAHI,UAIfkD,SAAU,QAAWA,WAEvB,cAEkBpH,YAAYuI,EAAZvI,oBAA4CA,YAAY,QAAZA,WAAhE,QAEE,WAAc,CAAEyI,SAAS,KAIrB,EAAA/E,SAAA,uCAAW,+BAAAgF,EAAA,6DAEjBC,aAAa,EAAbA,eACA,gBAAqBC,YAAW,WAC9B,WAAc,CAAExB,UAAU,MA/ChC,KAkDYyB,EAAc,EAAtB,MAAQA,UAPS,SAQKA,EAAP,GARE,gDAQ0B,CAA3C,KARiB,OAQXvB,EARW,KASjB,WAAc,CAAEA,SAAQmB,SAAV,EAAyBrB,UAAzB,EAAyCnE,UACvD,oBAA4BqE,EAA5B,QAViB,4CAAX,sDAaA,EAAAwB,gBAAkB,iBAChB3E,EAAW,EAAnB,MAAQA,OACR,EAAiD,EAAjD,MAAM,EAAN,EAAM,SAAN,EAAM,UAAN,EAAM,UAA8BiD,EAApC,EAAoCA,SAC9BC,IAAYC,EAAF,YAAhB,EACI5F,EAAJ,UAGA,OAFA,EAAaA,GAAQ,OAAAyC,QAAM,IAANA,OAAA,EAAAA,EAAA,QAAiBrC,EAC7BoC,IAAWxC,GAAQ,OAAAyC,QAAM,IAANA,OAAA,EAAAA,EAAA,SAAkBrC,GAE5C,yBACE0C,UAAW0B,GAAE,mBACV7C,GADW,GAAD,cAEVA,EAFW,GAAD,cAGVA,EAAmBgE,GAHT,IAKbzB,MAAO,CAAElE,UAET,sBAAM6E,GAAIc,EAAU,uBAAyB,sBAK3C,EAAA0B,YAAc,WACpB,IAAQC,EAAS,EAAjB,MAAQA,KACR,EAAwD,EAAxD,MAAM,EAAN,EAAM,SAAN,EAAM,UAAN,EAAM,YAAN,EAAM,SAAwC/F,EAA9C,EAA8CA,MACxCoE,IAAYC,EAAF,YAAhB,EACA,OACE,sCACM,EAAK1G,OACTuF,QAASkB,KAAa2B,EACtBC,UAAW5B,EACXnD,UAAWA,EACXjB,MAAOA,EACPS,SAAU,EAAKA,SACfF,QAAS,kBAAM,WAAc,CAAEU,WAAW,KAC1CT,OAAQ,kBAAM,WAAc,CAAES,WAAW,SAMvC,EAAAgF,YAAc,iBACpB,EAA0D,EAA1D,MAAM,EAAN,EAAM,SAAN,EAAM,WAAN,EAAM,OAAN,EAAM,QAAN,EAAM,KAAuC1D,EAA7C,EAA6CA,SAC7C,EAAwD,EAAxD,MAAM,EAAN,EAAM,SAAN,EAAM,UAAN,EAAM,YAAN,EAAM,SAAwCvC,EAA9C,EAA8CA,MACxCkG,GAAN,EAEIzH,EAAJ,UAGA,QAJkB4F,EAAF,YAAhB,EAEa5F,GAAQ,OAAAyC,QAAM,IAANA,OAAA,EAAAA,EAAA,QAAiBrC,EAC7BoC,IAAWxC,GAAQ,OAAAyC,QAAM,IAANA,OAAA,EAAAA,EAAA,SAAkBrC,GAE5C,2BACE0C,UAAW0B,GAAE,mBACV7C,EADW,GAAD,cAEVA,EAFW,GAAD,cAGVA,EAAoBE,GAHV,IAKbqC,MAAO,CAAElE,UAET,0BAAMkE,MAAO,CAAEwD,KAAM,IAClBpC,GAAQ,sBAAMT,GAAIS,IADrB,IACgC9D,GADhC,MACgDsC,GAAYnB,8BAT9D,MAWG1E,oBAA0BsD,EAA1BtD,QAA0C0E,kCAAQpB,EAARoB,OAZ/C,OAiBM,EAAAgF,eAAiB,WACvB,MAAwB,EAAxB,MAAM,EAAN,EAAM,MAASlG,EAAf,EAAeA,KACf,OACE,yBAAKqB,UAAS,UAAKnB,GAAmBuC,MAAO,CAAElE,MAAO,YACnD,EADH,kBAEE,2BAAO4H,QAASnG,GACd,uBAAuB2E,gBAAiB,CAAC,aAAcC,oBAAkB,EAACC,kBAAgB,GACvF9E,GALT,MAYK,EAAAqG,OAAS,iBACd,EAAkD,EAAlD,MAAM,EAAN,EAAM,WAAN,EAAM,OAAN,EAAM,WAAN,EAAM,KAAkCtG,EAAxC,EAAwCA,MACxC,EAAsD,EAAtD,UAAQqE,cAAR,MAAM,GAAN,EAAM,EAAN,EAAM,UAAN,EAAM,SAAkCpD,EAAxC,EAAwCA,UAClCmD,EAAUoB,QAAyBnB,YAAsB9B,IAA/D,GACMgE,EAAUnC,GAAhB,EACMlB,EAAUqD,GAAhB,EACA,gBAAIxF,EAAyB,EAAP,iBAEpB,yBACEQ,UAAW0B,GAAE,mBACV7C,GADW,GAAD,cAEVA,EAFW,GAAD,cAGVA,EAAoBE,GAHV,KAMZ,EAPH,cAQG,EARH,cASGiG,GAAW,EATd,kBAUGrD,GAAW9B,sCAAgB,EAAKzD,MAAW,EAXhD,UAnIA,QAAa,sBAAb,GAFUA,E,UAJmB6I,aACxBxB,gBAAe,CAAEX,OAAF,GAAcmB,SAAd,EAA8BvE,WAA9B,EAAgDkD,UAAhD,EAAiEnE,WAAO2B,G,ICLnF8E,G,kDACXxB,WAAYtH,qCACV,kBAmBM+I,kBAAoB,cAAW,WACrC,IAAMC,GAAW5J,cAAc,QAAdA,gBAAyC6J,YAAD,OAAzD,KACA,iBAAoB,QAApB,WACC,eAHK,KAaD,EAAAvB,mBAAsBC,YACvBA,UAAoB,QAAxB,OACE,WAAc,CAAEtF,MAAO,eAAoB,MAIxC,EAAAsG,OAAS,WACd,IAAQO,EAAW,EAAnB,MAAQA,OACA7G,EAAU,EAAlB,MAAQA,MACR,OACE,yBAAKuB,UAAWnB,GACdgB,8BACGyF,OAAYC,YAAD,OACV,yBAAK7J,IAAK6J,EAAM5G,KAAMqB,UAAWnB,EAAqBuC,MAAO,CAAEoE,UAAW,KAACD,QAAD,GAA0B,MAWhH,kBACE,OAAQA,EAAR,MACE,WAEA,aAEA,YAEA,YAEA,WAEA,QACE,OAAO,sCAA6B,CAAE5F,SAAQ4F,QAAOE,UAAjB,EAAmCvG,eAvB9DwG,CAAQ,IAAkB,WAAlB,KAAkB,gBAA0B,QAL/D,eAxCA,QAAa,CACXC,SAAU,CAAEC,WAAW,GACvBnH,MAAO,eAAoB,IAE7BoH,YACEzJ,EAAA,kDAAiB,+BAAA8H,EAAA,sEACM4B,GAAa,YAAkB1J,EAAlB,0BAAkBA,EAAcmJ,EAAhC,MAA6CnJ,EAA/E,OADe,cACT0G,EADS,yBAERA,SAAP,GAFe,2CAAjB,wDADF+C,MAKQ/C,YACN,IAAM6C,EAAN,GACAvJ,kBAAqB,cACnBuJ,EAASJ,EAATI,OAAkC7C,EAAlC6C,MAEF,WAAc,CAAEA,gBAhBRvJ,E,4CAyBJ8C,SAAQ,OACd6G,KAAA,SAAc,CACZJ,SAAU,2BAAKI,KAAKlI,MAAV,UAAF,kBAA6B0H,EAAD,KAAcH,IAClD3G,MAAO,2BAAKsH,KAAKlI,MAAV,OAAF,kBAA0B0H,EAAD,KAAc9G,MAE9CsH,KAAA,wB,GA/ByBd,aA+E7B,SAASe,GAAT,GAME,IAAMrF,EAAMC,sBAENyD,EAAS,uCAAG,uBAAAH,EAAA,+EACT4B,GAAc1J,EAAD,QAAqBA,EAAzC,YADgB,2CAAH,sDAMf,OAHA6G,qBAAU,W,MACR,UAAAtC,EAAA,qCACC,CAACvE,EAFJ6G,YAIE,sCACM7G,EAAMmJ,OACV5F,OAAQvD,EAAMuD,OACd8F,UAAWrJ,EAAMqJ,UACjB9E,IAAKA,EACLlC,MAAOrC,YAAgBA,QAAhBA,MACP8C,SAda,SAACT,EAAD,UAAgCrC,WAAeA,EAAfA,QAAjD,IAeIiI,UAAWA,K,SAKjB,G,qFAAA,2BAAAH,EAAA,0DAKMqB,YAAJ,EALF,yCAKuC,CAAP,mBALhC,UAMOA,EAAD,WAAJ,EANF,yCAMkC,IANlC,gCAOSA,cAAuBE,GAA9B,KAPF,4C,0BC1GaQ,G,kDACXvC,WAAYtH,S,EAAAA,2BACV,iB,iBASM,EAAA8C,SAAA,uCAAiC,+BAAAgF,EAAA,sEAClBgC,GAAY,QAAD,OAAhC,GADuC,OACjCZ,EADiC,OAEvC7G,EAAQ0H,GAAW1H,EAAnBA,GACA,WAAc,CAAE6G,SAAQF,UAAS3G,UACjC,sBAJuC,2CAAjC,wDAOD,EAAAsG,OAAS,WACd,OACE,kCACElF,2BADF,gBAEE,sCAAU,EAAKzD,MAAW,EAAKyB,OAAOqB,SAAU,EAAKA,cAnBzD,QAAa,CACXoG,OADW,GAEXF,SAFW,EAGX3G,MAAOrC,EAAMqC,OAEfyH,GAAY9J,EAAD,OAAeA,EAA1B8J,aAA6CZ,YAAD,OAAY,WAAc,CAAEA,cAP9DlJ,E,UADsB6I,a,SA6BpC,G,mFAAA,2DAAAf,EAAA,sDACQkC,EAAN,GADF,cAEE,GAFF,4DAEExE,EAFF,QAGQyE,GAAJ,GACIzE,EAAJ,KAJJ,wBAKY0E,EAAW1E,YAAY2E,YAAD,OAAeA,EAAUd,GAArD,OALN,UAM6BI,YAAvB,GANN,QAMYW,EANZ,OAOMH,EAAYG,SAAgBC,YAAD,QAA3BJ,KAPN,wBASMA,KATN,WAWI,EAXJ,4DAaQzE,EAAJ,OAbJ,kCAc8BsE,GAAYtE,UAAD,IAAiB,OAAA6D,QAAS,IAATA,OAAA,EAAAA,EAAY7D,EAAZ,QAApD,IAdN,QAeM,GADM8E,EAdZ,OAeU9E,EAAJ,OACE,IAAS/G,EAAT,EAAgBA,EAAhB,OAA4BA,IAAK,eAC/B,GAD+B,IAC/B,6BAA4B,QAC1BuL,kCAAgB,GAAhBA,IAAyBzH,KAAM,GAAF,OAAKgI,EAAGhI,KAAR,YAAgB9D,MAFhB,mCAK5B,eACL,GADK,IACL,6BAA4B,QAC1BuL,kCAAgB,GAAhBA,IAAyBzH,KAAM,GAAF,OAAKiD,EAAEjD,KAAP,YAAegI,EAAGhI,SAF5C,+BArBb,wBA2BMyH,UA3BN,wKA8BE,GA9BF,iE,sBAiCA,SAASD,GAAT,KACE,IAAMS,EAAOtB,EAAA,QAAc,cAEzB,OADAuB,EAAMjF,EAANiF,SACA,IAFF,IAIMC,EAAYC,gBAAlB,GAIA,OAHAvL,wBAAgCE,YACzBkL,EAAL,WAAuBE,EAAP,MAElB,E,ICvCa,IAAEE,MAxCH,QAwCUC,YAtCP,wCAsCoBhC,UAvBnB,SAAC7I,GACjB,IAKQqC,EAAoBrC,EAApBqC,MAAOS,EAAa9C,EAAb8C,SACf,OAAO,kBAAC,GAAD,CAAoBoG,OANa,CACtC,CAAE3G,KAAM,QAASqC,UAAU,GAC3B,CAAErC,KAAM,WAAYqC,UAAU,EAAMxB,KAAM,YAC1C,CAAEb,KAAM,SAAUa,KAAM,QAASd,MAAO,0CAA2CsC,UAAU,IAG5DvC,QAAOS,cAgBIgI,OAAQ,CAAE5B,OAX3C,2MAOb6B,OAIgEC,aAb7C,IAa6DC,UAFhE,YCQH,IAAEL,MA9CH,cA8CUC,YA5CP,0DA4CoBhC,UAzBnB,SAAC7I,GACjB,IAOQqC,EAAoBrC,EAApBqC,MAAOS,EAAa9C,EAAb8C,SACf,OAAO,kBAAC,GAAD,CAAoBoG,OARa,CACtC,CAAE3G,KAAM,OAAQqC,UAAU,EAAMsG,KAAM,MACtC,CAAE3I,KAAM,WAAY8C,aAAc,kBAAmB6F,KAAM,MAC3D,CAAE3I,KAAM,WAAY8C,aAAc,cAAe6F,KAAM,MACvD,CAAE3I,KAAM,WAAYa,KAAM,QAC1B,CAAEb,KAAM,SAAUa,KAAM,QAASd,MAAO,sBAGPD,QAAOS,cAgBIgI,OAAQ,CAAE5B,OAX3C,2MAOb6B,OAIgEC,aAb7C,IAa6DC,UAFhE,Y,UCYH,IAAEL,MAvDH,2BAuDUC,YArDP,uJAqDoBhC,UAtCnB,SAAC7I,GACjB,IAAMmL,EAAQ,GACRC,EAAgBC,GACnBC,QAAO,YAAe,IAAZ/I,EAAW,EAAXA,KACHgJ,GAAWJ,EAAM5I,GAEvB,OADA4I,EAAM5I,IAAQ,EACPgJ,KAERC,MAAM,EAAG,KACTC,KAAI,gBAAGlJ,EAAH,EAAGA,KAAH,MAAe,CAAEF,MAAOE,EAAMD,MAAOC,MACtC2G,EAAkC,CACtC,CAAE3G,KAAM,OAAQH,QAASgJ,GACzB,CAAE7I,KAAM,SAAUa,KAAM,OAAQhB,QAASgJ,IAEnC/I,EAAoBrC,EAApBqC,MAAOS,EAAa9C,EAAb8C,SACf,OACE,kBAAC,WAAD,KACE,kBAAC,GAAD,CAAoBoG,SAAQ7G,QAAOS,eAqBOgI,OAAQ,CAAE5B,OAX3C,qMAOb6B,OAIgEC,aAhB7C,CACnBU,KAAM,aACNL,OAAQ,CAAC,YAAa,eAc0DJ,UAFhE,WCdZ/B,GAAkC,CACtC,CAAE3G,KAAM,QAASH,QAAS,CAAC,CAAEC,MAAO,OAAS,CAAEA,MAAO,OAAS,CAAEA,MAAO,SAAW6I,KAAM,IAWzF,CAAE3I,KAAM,gBAAiBa,KAAM,UAC/B,CACE8F,OAAQ,CACN,CAAE3G,KAAM,YAAa2I,KAAM,IAC3B,CAAE3I,KAAM,UAAW2I,KAAM,KAE3B3I,KAAM,eAER,CACE2G,OAAQ,CACN,CAAE3G,KAAM,YAAa2I,KAAM,IAC3B,CAAE3I,KAAM,UAAW2I,KAAM,KAE3BvM,OAAQ,SAAC0K,GAAD,OAAgCA,EAAUsC,eAAiB,GACnEpJ,KAAM,SACNqJ,KAAM,CAAC,SAACvC,GAAD,MAAoD,SAApBA,EAAUwC,UAMtC,IAAEjB,MAzEH,2BAyEUC,YAvEP,uJAuEoBhC,UA5CnB,SAAC7I,GACjB,IAAQqC,EAAoBrC,EAApBqC,MAAOS,EAAa9C,EAAb8C,SACf,OACE,kBAAC,WAAD,KACE,kBAAC,GAAD,CAA2BoG,UAAQ7G,QAAOS,eAwCAgI,OAAQ,CAAE5B,UAAQ8B,aAnC7C,IAmC6DC,UAFhE,YCzDZa,GAAS,SAACC,EAAcC,GAAf,OACbD,EACGE,MAAM,MACNR,KAAI,SAACS,GAAD,gBAAU,IAAIC,OAAOH,IAArB,OAA8BE,MAClC1M,KAAK,MACL4M,WAoBL,SAASC,GAAQrM,GACf,MAA8BsM,oBAAS,GAAvC,mBAAOtD,EAAP,KAAgBuD,EAAhB,KACA,EAA0BD,mBAAStM,EAAM8K,OAAOE,cAAhD,mBAAO3I,EAAP,KAAcmK,EAAd,KACM1J,EAAgC,uCAAG,WAAOT,EAAO2G,GAAd,SAAAlB,EAAA,sDACvC0E,EAASnK,GACTkK,EAAWvD,GAF4B,2CAAH,wDAKtC,OACE,oCACE,4BAAKhJ,EAAM4K,OACX,2BAAI5K,EAAM6K,aAEV,yBAAKjH,UAAU,kBACb,yBAAKA,UAAS,qCAAgC5D,EAAMiL,UAAtC,aACZ,yBAAKjG,MAAO,CAAEzE,QAAS,OAAQkM,cAAe,SAAUzL,MAAO,SAC7D,yBAAKgE,MAAO,CAAEwD,KAAM,EAAGrH,aAAc,QACnC,wBAAIyC,UAAU,YAAd,OAEE,yBAAKoB,MAAO,CAAE0H,MAAO,QAASrG,SAAU,YACtC,4BAAQsG,QAAS,kBAAMH,EAAS,MAAhC,WAGJ,kBAACxM,EAAM6I,UAAP,CAAiB/F,SAAUA,EAAUT,MAAOA,KAE9C,yBAAK2C,MAAO,CAAEwD,KAAM,IAClB,qCACA,kBAAC,IAAD,CAAmBoE,SAAS,aAAa5H,MAA2B,YAApBhF,EAAMiL,UAA0B4B,IAAOC,KACpFC,KAAKC,UAAU,CAAEhE,UAAS3G,SAAS,KAAM,OAKlD,yBACEuB,UAAU,8CACVoB,MAAO,CAAEiI,aAAc,EAAGpL,SAAU,SAAUH,QAAS,MAAO+K,cAAe,WAE7E,2CACA,kBAAC,IAAD,CAAmBG,SAAS,aAAa5H,MAAO8H,KAxDxC,SAAC,GAAD,IAAG5D,EAAH,EAAGA,OAAQ8B,EAAX,EAAWA,aAAX,MAChB,yMAMqCc,GAAOiB,KAAKC,UAAUhC,EAAc,KAAM,GAAI,GAAGD,OANtF,gIAWiBe,GAAOiB,KAAKC,UAAU9D,EAAQ,KAAM,GAAI,GAAG6B,OAX5D,uEAeCA,OAyCUmC,CAAUlN,EAAM8K,YAQdqC,OAlFH,WACV,OACE,yBAAKvJ,UAAU,aACZxE,OAAO4D,OAAOoK,GAAU3B,KAAI,SAACzL,EAAOvB,GAAR,OAC3B,kBAAC4N,GAAD,eAAS/M,IAAKb,GAAOuB,SCL7BqN,IAAS1E,OAAO,kBAAC,GAAD,MAAShE,SAAS2I,eAAe,W","file":"static/js/main.11d00f9b.chunk.js","sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","export default {\n  ACCENT: '#5196D5',\n  ERROR: '#D65947',\n};\n","import React from 'react';\nimport RSelect, { StylesConfig } from 'react-select';\nimport { TInputProps } from '../types';\nimport COLORS from '../Colors';\n\nfunction getSelect<T>(isMulti: boolean = false) {\n  const Select = (props: TInputProps<T>) => {\n    const customStyles: StylesConfig<any, any, any> = {\n      control: () => ({\n        background: 'none !important',\n        borderBottom: `solid 0.13em`,\n        borderColor: props.borderColor,\n        cursor: 'text',\n        display: 'flex',\n        paddingTop: isMulti ? '1.2em' : '0',\n        transition: '0.2s ease-in-out',\n      }),\n      indicatorSeparator: () => ({ display: 'none' }),\n      indicatorsContainer: () => ({ display: 'none' }),\n      input: (provided: any) => ({\n        ...provided,\n        color: 'inherit',\n        marginTop: isMulti ? '-1em' : '0.2em',\n        width: '5em',\n      }),\n      multiValue: () => ({\n        background: props.colors?.accent || COLORS.ACCENT,\n        display: 'flex',\n        marginBottom: '0.2em',\n        marginRight: '0.2em',\n      }),\n      multiValueLabel: (provided: any) => ({\n        ...provided,\n        color: 'inherit',\n      }),\n      multiValueRemove: (provided: any) => ({\n        ...provided,\n        '&:hover': {\n          background: 'none',\n          cursor: 'pointer',\n          opacity: 1,\n        },\n        color: 'inherit !important',\n        opacity: 0.5,\n      }),\n      option: (_: any, state) => ({\n        background: state.isSelected\n          ? props.colors?.accent || COLORS.ACCENT\n          : state.isFocused\n          ? (props.colors?.accent || COLORS.ACCENT) + '1F'\n          : 'white',\n        color: state.isSelected ? 'white' : '#555',\n        padding: '0.25em 0.5em',\n      }),\n      placeholder: () => ({ display: 'none' }),\n      singleValue: () => ({\n        color: props.isErrored ? props.colors?.error || COLORS.ERROR : 'inherit',\n        overflow: 'hidden',\n        position: 'absolute',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        width: '100%',\n      }),\n      valueContainer: (provided: any) => ({\n        ...provided,\n        alignItems: isMulti ? 'start' : 'flex-end',\n        margin: '0',\n        marginTop: '0.3em',\n        padding: '0',\n      }),\n    };\n    const onChange = (item: any) => {\n      if (isMulti) {\n        const values = {};\n        [...(item.map((it: any) => it.value) as any)].forEach((v) => (values[v] = true));\n        props.onChange(Object.keys(values) as any);\n      } else {\n        props.onChange(item && item.value);\n      }\n    };\n    const options = props.options?.map(({ value, label }) => ({ value, label: label || value }));\n    const value = options?.filter((option) =>\n      Array.isArray(props.value) ? props.value.includes(option.value) : option.value === props.value\n    );\n    return (\n      <RSelect\n        name={props.name}\n        menuPlacement=\"bottom\"\n        options={options}\n        styles={customStyles}\n        isMulti={isMulti}\n        isDisabled={props.disabled}\n        onFocus={props.onFocus}\n        onBlur={props.onBlur}\n        onChange={onChange}\n        value={value}\n      />\n    );\n  };\n  return Select;\n}\n\nexport const Tags = getSelect<string[]>(true);\n\nexport const Select = getSelect<string>();\n","import { TInputProps } from '../types';\nimport COLORS from '../Colors';\nimport { Select, Tags } from './Select';\nimport File from './File';\nimport Date from './Date';\nimport Checkbox from './Checkbox';\nimport Input from './Input';\nimport TextArea from './TextArea';\nimport React from 'react';\n\nconst getBorderColor = (props: TInputProps<any>) => {\n  const { colors, isErrored, isFocused } = props;\n  let borderColor = 'inherit';\n  if (isErrored) borderColor = colors?.error || COLORS.ERROR;\n  else if (isFocused) borderColor = colors?.accent || COLORS.ACCENT;\n  return { borderColor };\n};\n\nexport default (props: TInputProps<any>) => {\n  const { options, type } = props;\n  const inputProps = { ...props, ...getBorderColor(props) };\n  if (options) {\n    if (type === 'tags') return <Tags {...inputProps} />;\n    return <Select {...inputProps} />;\n  }\n  if (type === 'date') return Date(inputProps);\n  if (type === 'files') return File(inputProps);\n  if (type === 'check') return Checkbox(inputProps);\n  if (type === 'text-multiline') return TextArea(inputProps);\n  return Input(inputProps);\n};\n","import React from 'react';\nimport DatePicker from 'react-datepicker';\nimport './Date.module.css';\nimport styles from '../styles.module.css';\nimport { createGlobalStyle } from 'styled-components';\nimport { TInputProps } from '../types';\n\nconst DateInput = (props: TInputProps<Date>) => {\n  const DatePickerWrapperStyles = createGlobalStyle`\n    .date_picker {\n      width: 100%\n    }\n    .date_picker input {\n      color: inherit;\n      border-color: ${props.borderColor};\n    }\n  `;\n  const onChange = (date: Date) => {\n    props.onChange(date);\n    // props.onBlur();\n  };\n  return (\n    <div className={styles.datepicker}>\n      <DatePicker\n        selected={props.value ? new Date(props.value) : undefined}\n        onChange={onChange}\n        onFocus={props.onFocus}\n        onCalendarClose={props.onBlur}\n        onBlur={props.onBlur}\n        dateFormat={props.format}\n        wrapperClassName={'date_picker'}\n        popperPlacement=\"bottom-start\"\n      />\n      <DatePickerWrapperStyles />\n    </div>\n  );\n};\n\nexport default DateInput;\n","import React, { ChangeEventHandler, createRef, FocusEventHandler, Fragment } from 'react';\nimport cl from 'classnames';\nimport { TInputProps } from '../types';\nimport styles from '../styles.module.css';\n\nconst FileInput = (props: TInputProps<File[]>) => {\n  const ref = createRef<HTMLInputElement>();\n  const ref2 = createRef<HTMLInputElement>();\n  const onFocus: FocusEventHandler<HTMLInputElement> = () => {\n    ref2.current?.blur();\n    ref.current?.click();\n    props.onFocus();\n    document.body.onfocus = onCancel;\n  };\n  const onChange: ChangeEventHandler<any> = (ev) => {\n    const files = ev.target.files;\n    props.onChange([...files]);\n  };\n  const onCancel = () => {\n    props.onBlur();\n    document.body.onfocus = null;\n  };\n  return (\n    <Fragment>\n      <input\n        required={props.required}\n        disabled={props.disabled}\n        max={props.max}\n        min={props.min}\n        name={props.name}\n        autoComplete={undefined}\n        value=\"\"\n        ref={ref}\n        style={{ display: 'none' }}\n        type=\"file\"\n        multiple={true}\n        accept={props.extensions?.join(',') || undefined}\n        onChange={onChange}\n        onBlur={onCancel}\n      />\n      <input\n        autoComplete={props.autocomplete}\n        className={cl({\n          [styles.isErrored]: props.isErrored,\n          [styles.hasHint]: props.hasHint,\n        })}\n        style={{ borderColor: props.borderColor, color: 'inherit' }}\n        value={props.value ? props.value.map((f: File) => `\"${f.name}\"`).join(', ') : undefined}\n        ref={ref2}\n        onFocus={onFocus}\n        readOnly={true}\n      />\n    </Fragment>\n  );\n};\n\nexport default FileInput;\n","import React, { ChangeEventHandler } from 'react';\nimport { TInputProps } from '../types';\n\nconst CheckboxInput = (props: TInputProps<boolean>) => {\n  const onChange: ChangeEventHandler<any> = (ev) => {\n    const isChecked = !!ev.target.checked;\n    props.onChange(isChecked);\n  };\n\n  return (\n    <input\n      required={props.required}\n      disabled={props.disabled}\n      max={props.max}\n      min={props.min}\n      name={props.name}\n      id={props.name}\n      autoComplete={props.autocomplete}\n      type=\"checkbox\"\n      // defaultValue={props.value as any}\n      onChange={onChange}\n      checked={!!props.value}\n      value={''}\n    />\n  );\n};\n\nexport default CheckboxInput;\n","import React from 'react';\nimport cl from 'classnames';\nimport { TInputProps } from '../types';\nimport styles from '../styles.module.css';\n\nconst TextArea = (props: TInputProps<string>) => {\n  return (\n    <textarea\n      required={props.required}\n      disabled={props.disabled}\n      name={props.name}\n      className={cl({\n        [styles.isErrored]: props.isErrored,\n        [styles.hasHint]: props.hasHint,\n      })}\n      style={{ borderColor: props.borderColor, color: 'inherit' }}\n      autoComplete={props.autocomplete}\n      value={props.value || ''}\n      onFocus={props.onFocus}\n      onBlur={props.onBlur}\n      onChange={(ev) => props.onChange(ev.target.value)}\n    ></textarea>\n  );\n};\n\nexport default TextArea;\n","import React, { ChangeEventHandler } from 'react';\nimport cl from 'classnames';\nimport { TInputProps } from '../types';\nimport styles from '../styles.module.css';\nimport COLORS from '../Colors';\n\nconst CommonInput = (props: TInputProps<string>) => {\n  const { colors } = props;\n  let color = 'inherit';\n  if (props.isErrored) color = colors?.error || COLORS.ERROR;\n\n  const onChange: ChangeEventHandler<any> = (ev) => {\n    let value = ev.target.value;\n    if (props.type === 'number') value = parseFloat(value);\n    props.onChange(value);\n  };\n\n  return (\n    <input\n      required={props.required}\n      disabled={props.disabled}\n      max={props.max}\n      min={props.min}\n      name={props.name}\n      className={cl({\n        [styles.isErrored]: props.isErrored,\n        [styles.hasHint]: props.hasHint,\n      })}\n      style={{ borderColor: props.borderColor, color }}\n      autoComplete={props.autocomplete}\n      type={props.type || 'text'}\n      value={props.value || ''}\n      onFocus={props.onFocus}\n      onBlur={props.onBlur}\n      onChange={onChange}\n    />\n  );\n};\n\nexport default CommonInput;\n","/**\n * Font awesome wrapper\n * Search icons in https://fontawesome.com/icons\n */\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\n\nlibrary.add(fas);\n\nconst Icon = (props: { id: string }) => (\n  <FontAwesomeIcon icon={props.id as any} style={{ color: 'inherit', fontSize: 'small', paddingBottom: '0.1em' }} />\n);\n\nexport default Icon;\n","import React, { createRef, Fragment, useEffect } from 'react';\nimport ReactMarkdownWithHtml from 'react-markdown/with-html';\nimport { createPopper } from '@popperjs/core';\nimport styles from '../../style/index.module.sass';\nimport { TFieldProps, TFieldState } from '../types';\nimport COLORS from '../Colors';\n\nfunction Hint<T, F>(props: TFieldProps<T, F> & TFieldState<T>) {\n  const { colors, errors, help, isDirty, isFocused, isTyping } = props;\n  const isError = !!errors.length && !isTyping && isDirty;\n\n  const refTarget = createRef<HTMLDivElement>();\n  const refPopper = createRef<HTMLDivElement>();\n\n  useEffect(() => {\n    if (refTarget.current && refPopper.current) {\n      createPopper(refTarget.current, refPopper.current, { placement: 'top-start' });\n    }\n  }, []);\n\n  let backgroundColor = undefined;\n  if (isError) backgroundColor = colors?.error || COLORS.ERROR;\n  else if (isFocused) backgroundColor = colors?.accent || COLORS.ACCENT;\n  const message = isError ? errors.join('\\n\\n') : help;\n\n  return (\n    <Fragment>\n      <div className={styles.hintTarget} ref={refTarget} />\n      <div className={styles.hint} ref={refPopper} style={{ backgroundColor }}>\n        <ReactMarkdownWithHtml disallowedTypes={['paragraph']} allowDangerousHtml unwrapDisallowed>\n          {isFocused ? message || '' : ''}\n        </ReactMarkdownWithHtml>\n        <div className={styles.arrow} data-popper-arrow></div>\n        {/* <div className={styles.spike} style={{ borderTopColor: backgroundColor }} /> */}\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Hint;\n","import React, { Component } from 'react';\nimport ReactMarkdownWithHtml from 'react-markdown/with-html';\nimport styles from '../../style/index.module.sass';\nimport { TFieldProps, TFieldState } from '../types';\nimport cl from 'classnames';\nimport Input from '../Input';\nimport Icon from '../Icon';\nimport COLORS from '../Colors';\nimport Hint from './Hint';\n\nconst ERROR_HIDE_DELAY = 1000;\n\ntype Props<T, F> = TFieldProps<T, F>;\ntype State<T> = TFieldState<T>;\n\nexport class Field<T, F> extends Component<Props<T, F>, State<T>> {\n  static initialState = { errors: [], isDirty: false, isFocused: false, isTyping: false, value: undefined };\n  private typingTimeout: NodeJS.Timeout | undefined = undefined;\n\n  constructor(props: Props<T, F>) {\n    super(props);\n    this.state = this.getStateAndValidate(props);\n  }\n\n  private getStateAndValidate = (props: Props<T, F>): State<T> => {\n    const state = {\n      ...Field.initialState,\n      value: props.value,\n    };\n    this.validate(props);\n    return state;\n  };\n\n  public validate = (props: Props<T, F> = this.props) => {\n    props.validator(props.value as T).then((errors) => this.setState({ errors: errors || [] }));\n  };\n\n  public componentDidUpdate = (prevProps: Props<T, F>) => {\n    if (prevProps.value !== this.state.value) {\n      const newState = {\n        ...this.getStateAndValidate(this.props),\n        isDirty: this.state.isDirty,\n        isFocused: this.state.isFocused,\n        isTyping: this.state.isTyping,\n      };\n      this.setState(newState);\n    }\n    const shouldReset = Object.keys(prevProps.formValue).length && !Object.keys(this.props.formValue).length;\n    if (shouldReset) {\n      this.setState({ isDirty: false });\n    }\n  };\n\n  private onChange = async (value: T) => {\n    // Do not show errors while typing\n    clearTimeout(this.typingTimeout as any);\n    this.typingTimeout = setTimeout(() => {\n      this.setState({ isTyping: false });\n    }, ERROR_HIDE_DELAY);\n\n    const { validator } = this.props;\n    const errors = (await validator(value)) || ['x'];\n    this.setState({ errors, isDirty: true, isTyping: true, value });\n    this.props.onChange(value, !errors.length);\n  };\n\n  private renderStateIcon = () => {\n    const { colors } = this.props;\n    const { errors, isDirty, isFocused, isTyping } = this.state;\n    const isError = !!errors.length && !isTyping && isDirty;\n    let color = 'inherit' || undefined;\n    if (isError) color = colors?.error || COLORS.ERROR;\n    else if (isFocused) color = colors?.accent || COLORS.ACCENT;\n    return (\n      <div\n        className={cl({\n          [styles.icon]: true,\n          [styles.isFocused]: isFocused,\n          [styles.isErrored]: isError,\n        })}\n        style={{ color }}\n      >\n        <Icon id={isError ? 'exclamation-triangle' : 'question-circle'} />\n      </div>\n    );\n  };\n\n  private renderInput = () => {\n    const { help } = this.props;\n    const { errors, isDirty, isFocused, isTyping, value } = this.state;\n    const isError = !!errors.length && !isTyping && isDirty;\n    return (\n      <Input\n        {...this.props}\n        hasHint={isError || !!help}\n        isErrored={isError}\n        isFocused={isFocused}\n        value={value}\n        onChange={this.onChange}\n        onFocus={() => this.setState({ isFocused: true })}\n        onBlur={() => this.setState({ isFocused: false })}\n      />\n    );\n  };\n\n  // eslint-disable-next-line complexity\n  private renderLabel = () => {\n    const { colors, disabled, icon, label, name, required } = this.props;\n    const { errors, isDirty, isFocused, isTyping, value } = this.state;\n    const isEmpty = !value;\n    const isError = !!errors.length && !isTyping && isDirty;\n    let color = 'inherit';\n    if (isError) color = colors?.error || COLORS.ERROR;\n    else if (isFocused) color = colors?.accent || COLORS.ACCENT;\n    return (\n      <label\n        className={cl({\n          [styles.isFocused]: isFocused,\n          [styles.isEmpty]: isEmpty,\n          [styles.isDisabled]: disabled,\n        })}\n        style={{ color }}\n      >\n        <span style={{ flex: 1 }}>\n          {icon && <Icon id={icon} />} {label || name} {required && <span>*</span>}\n        </span>\n        {Array.isArray(value) && !!value.length && <span>({value.length})</span>}\n      </label>\n    );\n  };\n\n  private renderCheckbox = () => {\n    const { label, name } = this.props;\n    return (\n      <div className={`${styles.checkbox}`} style={{ color: 'inherit' }}>\n        {this.renderInput()}{' '}\n        <label htmlFor={name}>\n          <ReactMarkdownWithHtml disallowedTypes={['paragraph']} allowDangerousHtml unwrapDisallowed>\n            {label || name}\n          </ReactMarkdownWithHtml>\n        </label>\n      </div>\n    );\n  };\n\n  public render = () => {\n    const { disabled, help, required, type, value } = this.props;\n    const { errors = [], isDirty, isTyping, isFocused } = this.state;\n    const isError = isDirty && !isTyping && (errors.length > 0 || (required && !value));\n    const hasIcon = isError || help;\n    const hasHint = hasIcon && isFocused;\n    if (type === 'check') return this.renderCheckbox();\n    return (\n      <div\n        className={cl({\n          [styles.field]: true,\n          [styles.isErrored]: isError,\n          [styles.isDisabled]: disabled,\n        })}\n      >\n        {this.renderLabel()}\n        {this.renderInput()}\n        {hasIcon && this.renderStateIcon()}\n        {hasHint && <Hint<T, F> {...this.props} {...this.state} />}\n      </div>\n    );\n  };\n}\n","import _ from 'lodash';\nimport React, { Component, createRef, useEffect } from 'react';\nimport styles from '../style/index.module.sass';\nimport { Field } from './Field';\nimport { TColors, TField, TForm } from './types';\n\ntype State<T> = {\n  validity: { [key: string]: boolean };\n  value: Partial<T>;\n};\n\nexport class Form<T> extends Component<TForm<T>, State<T>> {\n  constructor(props: TForm<T>) {\n    super(props);\n    this.state = {\n      validity: { something: false }, // Not valid by default, until first validation\n      value: this.props.value || {},\n    };\n    Promise.all(\n      props.fields.map(async (field) => {\n        const errors = await validateField<any, any>(field, props.value?.[field.name], props.value);\n        return errors.length > 0;\n      })\n    ).then((errors) => {\n      const validity = {};\n      props.fields.forEach((field, i) => {\n        validity[field.name as string] = !errors[i];\n      });\n      this.setState({ validity });\n    });\n  }\n\n  private propagateOnChange = _.debounce(() => {\n    const isValid = !Object.values(this.state.validity).some((b) => !b);\n    this.props.onChange(this.state.value, isValid);\n  }, this.props.delay || 500);\n\n  private onChange<X>(field: TField<X, T>, value: X, isValid: boolean): void {\n    this.setState({\n      validity: { ...this.state.validity, [field.name]: isValid },\n      value: { ...this.state.value, [field.name]: value },\n    });\n    this.propagateOnChange();\n  }\n\n  public componentDidUpdate = (prevProps: TForm<T>) => {\n    if (prevProps.value !== this.props.value) {\n      this.setState({ value: this.props.value || {} });\n    }\n  };\n\n  public render = () => {\n    const { fields } = this.props;\n    const { value } = this.state;\n    return (\n      <div className={styles.formelio}>\n        <form>\n          {fields.map((field) => (\n            <div key={field.name} className={styles.fieldWrapper} style={{ flexBasis: (field.size || 1) * 100 + '%' }}>\n              {getField<T>(field, value, this.onChange.bind(this), this.props.colors)}\n            </div>\n          ))}\n        </form>\n      </div>\n    );\n  };\n}\n\n// @TODO Don't use \"any\" here\nfunction getField<T>(field: any, value: any, onChange: any, colors?: TColors) {\n  switch (field.type) {\n    case 'date':\n      return <FieldWrapper<Date, T> {...{ colors, field, formValue: value, onChange }} />;\n    case 'number':\n      return <FieldWrapper<number, T> {...{ colors, field, formValue: value, onChange }} />;\n    case 'files':\n      return <FieldWrapper<File[], T> {...{ colors, field, formValue: value, onChange }} />;\n    case 'check':\n      return <FieldWrapper<boolean, T> {...{ colors, field, formValue: value, onChange }} />;\n    case 'tags':\n      return <FieldWrapper<string[], T> {...{ colors, field, formValue: value, onChange }} />;\n    default:\n      return <FieldWrapper<string, T> {...{ colors, field, formValue: value, onChange }} />;\n  }\n}\n\n/**\n * Intermediate component to let field handlers receive form data without passing\n * any form info to the Field class itself. This way <Field/> does not need to know about <Form/>\n */\nfunction FieldWrapper<T, F>(props: {\n  field: TField<T, F>;\n  formValue: Partial<F>;\n  onChange: (field: TField<T, F>, value: T, isValid: boolean) => void;\n  colors?: TColors;\n}) {\n  const ref = createRef<Field<T, F>>();\n  const onChange = (value: T, isValid: boolean) => props.onChange(props.field, value, isValid);\n  const validator = async (value?: T): Promise<string[]> => {\n    return validateField(props.field, value, props.formValue);\n  };\n  useEffect(() => {\n    ref.current?.validate();\n  }, [props.formValue]);\n  return (\n    <Field<T, F>\n      {...props.field}\n      colors={props.colors}\n      formValue={props.formValue}\n      ref={ref}\n      value={props.formValue[props.field.name] as any}\n      onChange={onChange}\n      validator={validator}\n    />\n  );\n}\n\nasync function validateField<T, F>(\n  field: TField<T, F>,\n  value: T | undefined,\n  formValue?: Partial<F>\n): Promise<string[]> {\n  if (field.required && !value) return ['Required field'];\n  if (!field.validator || !value) return [];\n  return field.validator(value, formValue || {});\n}\n","import { clone } from 'lodash';\nimport React, { Component, Fragment } from 'react';\nimport { Form } from './Form';\nimport { TForm } from './types';\n\ntype State<T> = {\n  fields: TForm<T>['fields'];\n  isValid: boolean;\n  value: TForm<T>['value'];\n};\n\nexport class DynamicForm<T> extends Component<TForm<T>, State<T>> {\n  constructor(props: TForm<T>) {\n    super(props);\n    this.state = {\n      fields: [],\n      isValid: false,\n      value: props.value,\n    };\n    cleanFields(props.fields, props.value).then((fields) => this.setState({ fields }));\n  }\n\n  private onChange: TForm<T>['onChange'] = async (value, isValid) => {\n    const fields = await cleanFields(this.props.fields, value);\n    value = cleanValue(value, fields);\n    this.setState({ fields, isValid, value });\n    this.props.onChange(value, isValid);\n  };\n\n  public render = () => {\n    return (\n      <Fragment>\n        <p>DYNAMIC FORM</p>\n        <Form {...this.props} {...this.state} onChange={this.onChange} />\n      </Fragment>\n    );\n  };\n}\n\n// eslint-disable-next-line complexity\nasync function cleanFields<T>(fields: TForm<T>['fields'], formValue?: Partial<T>): Promise<TForm<T>['fields']> {\n  const nextFields: TForm<T>['fields'] = [];\n  for (const f of fields) {\n    let isPresent = false;\n    if (f.when) {\n      const promises = f.when.map((condition) => condition(formValue || {}));\n      const partials = await Promise.all(promises);\n      isPresent = partials.every((re) => !!re);\n    } else {\n      isPresent = true;\n    }\n    if (!isPresent) continue;\n\n    if (f.fields) {\n      const subfields = await cleanFields(f.fields || [], formValue?.[f.name] || {});\n      if (f.length) {\n        for (let i = 0; i < length; i++) {\n          for (const sf of subfields) {\n            nextFields.push({ ...sf, name: `${sf.name}.${i}` as any });\n          }\n        }\n      } else {\n        for (const sf of subfields) {\n          nextFields.push({ ...sf, name: `${f.name}.${sf.name}` as any });\n        }\n      }\n    } else {\n      nextFields.push(f);\n    }\n  }\n  return nextFields;\n}\n\nfunction cleanValue<T>(value: Partial<T>, fields: TForm<T>['fields']): Partial<T> {\n  const keys = fields.reduce((accum, f) => {\n    accum[f.name] = true;\n    return accum;\n  }, {} as { [key: string]: boolean });\n  const nextValue = clone(value);\n  Object.keys(nextValue).forEach((key) => {\n    if (!keys[key]) delete nextValue[key];\n  });\n  return nextValue;\n}\n","import React from 'react';\nimport { Form, TForm } from 'formelio';\n\nconst title = 'Login';\n\nconst description = `\nSimple login form with two fields\n`;\n\ntype TValue = {\n  email: string;\n  password: string;\n  accept: boolean;\n};\n\ntype Props = {\n  value: TForm<TValue>['value'];\n  onChange: TForm<TValue>['onChange'];\n};\n\nconst Component = (props: Props) => {\n  const fields: TForm<TValue>['fields'] = [\n    { name: 'email', required: true },\n    { name: 'password', required: true, type: 'password' },\n    { name: 'accept', type: 'check', label: 'I accept [whatever](https://google.com)', required: true },\n  ];\n  const { value, onChange } = props;\n  return <Form<TValue> {...{ fields, value, onChange }} />;\n};\n\nconst initialState = {};\n\nconst fields = `\nconst fields = [\n  { name: 'name', required: true, size: 0.5 },\n  { name: 'surname', size: 0.5 },\n  { name: 'birthday', type: 'date' },\n  { name: 'accept', type: 'check', required: true },\n];\n`.trim();\n\nconst tileClass = 'is-light';\n\nexport default { title, description, Component, source: { fields, initialState }, tileClass };\n","import React from 'react';\nimport { Form, TForm } from 'formelio';\n\nconst title = 'Basic usage';\n\nconst description = `\nHello bla bla, this is an example\n\nwith two lines\n`;\n\ntype TValue = {\n  name: string;\n  surname1: string;\n  surname2: string;\n  birthday: Date;\n  accept: boolean;\n};\n\ntype Props = {\n  value: TForm<TValue>['value'];\n  onChange: TForm<TValue>['onChange'];\n};\n\nconst Component = (props: Props) => {\n  const fields: TForm<TValue>['fields'] = [\n    { name: 'name', required: true, size: 0.333 },\n    { name: 'surname1', autocomplete: 'additional-name', size: 0.333 },\n    { name: 'surname2', autocomplete: 'family-name', size: 0.333 },\n    { name: 'birthday', type: 'date' },\n    { name: 'accept', type: 'check', label: 'I accept whatever' },\n  ];\n  const { value, onChange } = props;\n  return <Form<TValue> {...{ fields, value, onChange }} />;\n};\n\nconst initialState = {};\n\nconst fields = `\nconst fields = [\n  { name: 'name', required: true, size: 0.5 },\n  { name: 'surname', size: 0.5 },\n  { name: 'birthday', type: 'date' },\n  { name: 'accept', type: 'check', required: true },\n];\n`.trim();\n\nconst tileClass = 'is-light';\n\nexport default { title, description, Component, source: { fields, initialState }, tileClass };\n","import React, { Fragment } from 'react';\nimport { Form, TForm } from 'formelio';\nimport cities from '../data/geo/municipios.json';\n\nconst title = 'Autocompletable dropdown';\n\nconst description = `\nThis example shows how to use dropdowns with autocomplete support.\nPerfect for huge lists of items, helping users to find the proper list item.\n`;\n\ntype TValue = {\n  city: string;\n  cities: string[];\n};\n\ntype Props = {\n  value: TForm<TValue>['value'];\n  onChange: TForm<TValue>['onChange'];\n};\n\nconst Component = (props: Props) => {\n  const found = {};\n  const citiesOptions = cities\n    .filter(({ name }) => {\n      const isFound = !found[name];\n      found[name] = true;\n      return isFound;\n    })\n    .slice(0, 100)\n    .map(({ name }) => ({ value: name, label: name }));\n  const fields: TForm<TValue>['fields'] = [\n    { name: 'city', options: citiesOptions },\n    { name: 'cities', type: 'tags', options: citiesOptions },\n  ];\n  const { value, onChange } = props;\n  return (\n    <Fragment>\n      <Form<TValue> {...{ fields, value, onChange }} />\n    </Fragment>\n  );\n};\n\nconst initialState = {\n  city: 'El Sotillo',\n  cities: ['Catarroja', 'El Gastor'],\n};\n\nconst fields = `\nconst fields = [\n  { name: 'name', required: true, size: 0.5 },\n  { name: 'surname', size: 0.5 },\n  { name: 'birthday', type: 'date' },\n  { name: 'comment', type: 'text-multiline' },\n];\n`.trim();\n\nconst tileClass = 'is-dark';\n\nexport default { title, description, Component, source: { fields, initialState }, tileClass };\n","import React, { Fragment } from 'react';\nimport { DynamicForm, TForm } from 'formelio';\n\nconst title = 'Autocompletable dropdown';\n\nconst description = `\nThis example shows how to use dropdowns with autocomplete support.\nPerfect for huge lists of items, helping users to find the proper list item.\n`;\n\ntype TValue = {\n  typeA: string;\n  name1: string;\n  name2: string;\n  commonField: number;\n  twoAndThree: string;\n  childrenCount: number;\n  people: Array<{\n    firstName: string;\n    surname: string;\n  }>;\n  responsible: {\n    firstName: string;\n    surname: string;\n  },\n};\n\ntype Props = {\n  value: TForm<TValue>['value'];\n  onChange: TForm<TValue>['onChange'];\n};\n\nconst Component = (props: Props) => {\n  const { value, onChange } = props;\n  return (\n    <Fragment>\n      <DynamicForm<TValue> {...{ fields, value, onChange }} />\n    </Fragment>\n  );\n};\n\nconst initialState = {};\n\nconst fields: TForm<TValue>['fields'] = [\n  { name: 'typeA', options: [{ value: 'uno' }, { value: 'dos' }, { value: 'tres' }], size: 0.5 },\n  // { name: 'name1', when: [(formValue: Partial<TValue>) => formValue.typeA === 'uno'], size: 0.5 },\n  // { name: 'name2', when: [(formValue: Partial<TValue>) => formValue.typeA === 'dos'], size: 0.5 },\n  // { name: 'commonField', type: 'number' },\n  // {\n  //   name: 'twoAndThree',\n  //   when: [\n  //     (formValue: Partial<TValue>) => formValue.typeA === 'dos',\n  //     async (formValue: Partial<TValue>) => formValue.commonField === 3,\n  //   ],\n  // },\n  { name: 'childrenCount', type: 'number' },\n  {\n    fields: [\n      { name: 'firstName', size: 0.5 },\n      { name: 'surname', size: 0.5 },\n    ],\n    name: 'responsible',\n  },\n  {\n    fields: [\n      { name: 'firstName', size: 0.5 },\n      { name: 'surname', size: 0.5 },\n    ],\n    length: (formValue: Partial<TValue>) => formValue.childrenCount || 0,\n    name: 'people',\n    when: [(formValue: Partial<TValue>) => formValue.typeA === 'tres'],\n  },\n];\n\nconst tileClass = 'is-light';\n\nexport default { title, description, Component, source: { fields, initialState }, tileClass };\n","import React, { useState } from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { dark, github } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport 'formelio/dist/index.css';\nimport * as examples from './examples';\nimport { TForm } from 'formelio';\n\nconst App = () => {\n  return (\n    <div className=\"container\">\n      {Object.values(examples).map((props, i) => (\n        <Example key={i} {...props} />\n      ))}\n    </div>\n  );\n};\n\nconst indent = (code: string, level: number) =>\n  code\n    .split('\\n')\n    .map((l) => `${' '.repeat(level)}${l}`)\n    .join('\\n')\n    .trimEnd();\n\nconst genSource = ({ fields, initialState }: typeof examples.Basic.source) =>\n  `\nimport React, { useState } from 'react';\nimport { Form } from 'formelio';\n\nconst MyForm = () => {\n  const [isValid, setIsValid] = useState(false);\n  const [value, setValue] = useState(${indent(JSON.stringify(initialState, null, 2), 2).trim()});\n  const onChange = (value, isValid) => {\n    setValue(value);\n    setIsValid(isValid);\n  };\n  const fields = ${indent(JSON.stringify(fields, null, 2), 2).trim()};\n  return (\n    <Form {...{fields, value, onChange}} />\n  );\n}`.trim();\n\nfunction Example(props: any) {\n  const [isValid, setIsValid] = useState(false);\n  const [value, setValue] = useState(props.source.initialState);\n  const onChange: TForm<any>['onChange'] = async (value, isValid) => {\n    setValue(value);\n    setIsValid(isValid);\n  };\n\n  return (\n    <>\n      <h3>{props.title}</h3>\n      <p>{props.description}</p>\n\n      <div className=\"tile is-parent\">\n        <div className={`tile is-child notification ${props.tileClass} content`}>\n          <div style={{ display: 'flex', flexDirection: 'column', width: '100%' }}>\n            <div style={{ flex: 1, marginBottom: '1em' }}>\n              <h4 className=\"subtitle\">\n                Form\n                <div style={{ float: 'right', fontSize: 'x-small' }}>\n                  <button onClick={() => setValue({})}>CLEAR</button>\n                </div>\n              </h4>\n              <props.Component onChange={onChange} value={value} />\n            </div>\n            <div style={{ flex: 0 }}>\n              <h4>State</h4>\n              <SyntaxHighlighter language=\"javascript\" style={props.tileClass === 'is-dark' ? dark : github}>\n                {JSON.stringify({ isValid, value }, null, 2)}\n              </SyntaxHighlighter>\n            </div>\n          </div>\n        </div>\n        <div\n          className=\"tile is-child notification is-light content\"\n          style={{ borderRadius: 0, overflow: 'hidden', padding: '1em', flexDirection: 'column' }}\n        >\n          <h4>Source code</h4>\n          <SyntaxHighlighter language=\"javascript\" style={github}>\n            {genSource(props.source)}\n          </SyntaxHighlighter>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}