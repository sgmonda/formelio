{"version":3,"sources":["../../node_modules/classnames/index.js","../../src/Colors.tsx","../../src/Input/index.tsx","../../src/Input/Select.tsx","../../src/Input/File.tsx","../../src/Input/Checkbox.tsx","../../src/Input/TextArea.tsx","../../src/Input/Input.tsx","../../src/Icon.tsx","../../src/Field/Hint.tsx","../../src/Field/index.tsx","../../src/Form.tsx","examples/basic.tsx","App.tsx","index.tsx"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","window","props","type","inputProps","isFocused","borderColor","colors","COLORS","getBorderColor","customStyles","control","background","borderBottom","cursor","display","transition","indicatorSeparator","indicatorsContainer","input","provided","color","option","state","padding","placeholder","singleValue","overflow","position","textOverflow","whiteSpace","width","valueContainer","alignItems","margin","marginTop","name","menuPlacement","options","styles","isDisabled","disabled","onFocus","onBlur","onChange","item","value","Select","ref","createRef","ref2","onCancel","document","autoComplete","undefined","style","multiple","accept","ev","files","autocomplete","className","cl","hasHint","f","readOnly","File","id","defaultValue","Checkbox","TextArea","Input","library","Icon","icon","Hint","isTyping","isError","errors","refTarget","refPopper","useEffect","createPopper","placement","backgroundColor","message","disallowedTypes","allowDangerousHtml","unwrapDisallowed","Field","constructor","typingTimeout","getStateAndValidate","validate","componentDidUpdate","prevProps","newState","isDirty","a","clearTimeout","setTimeout","validator","renderStateIcon","renderInput","help","isErrored","renderLabel","required","isEmpty","flex","label","React","renderCheckbox","htmlFor","render","Component","Form","propagateOnChange","isValid","b","fields","field","flexBasis","formValue","getField","validity","something","Promise","validateField","this","FieldWrapper","title","description","size","source","trim","initialState","tileClass","Example","useState","setValue","setIsValid","flexDirection","marginBottom","language","github","JSON","stringify","borderRadius","code","level","split","map","l","repeat","trimEnd","genSource","App","Basic","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.730ae731.chunk.js","sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","export default {\n  ACCENT: '#5196D5',\n  ERROR: '#D65947',\n};\n","import { TInputProps } from '../types';\nimport COLORS from '../Colors';\nimport Select from './Select';\nimport File from './File';\n// import Date from './Date';\nimport Checkbox from './Checkbox';\nimport Input from './Input';\nimport TextArea from './TextArea';\n\nconst getBorderColor = (props: TInputProps<any>) => {\n  const { colors, isErrored, isFocused } = props;\n  let borderColor = 'inherit';\n  if (isErrored) borderColor = colors?.error || COLORS.ERROR;\n  else if (isFocused) borderColor = colors?.accent || COLORS.ACCENT;\n  return { borderColor };\n};\n\nexport default (props: TInputProps<any>) => {\n  const { options, type } = props;\n  const inputProps = { ...props, ...getBorderColor(props) };\n  if (options) return Select(inputProps);\n  // if (type === 'date') return Date(inputProps);\n  if (type === 'files') return File(inputProps);\n  if (type === 'check') return Checkbox(inputProps);\n  if (type === 'text-multiline') return TextArea(inputProps);\n  return Input(inputProps);\n};\n","import React from 'react';\nimport RSelect, { StylesConfig } from 'react-select';\nimport { TInputProps } from '../types';\nimport COLORS from '../Colors';\n\nconst Select = (props: TInputProps<string>) => {\n  const customStyles: StylesConfig<any, any, any> = {\n    control: () => ({\n      background: 'none !important',\n      borderBottom: `solid 0.13em`,\n      borderColor: props.borderColor,\n      cursor: 'text',\n      display: 'flex',\n      transition: '0.2s ease-in-out',\n    }),\n    indicatorSeparator: () => ({ display: 'none' }),\n    indicatorsContainer: () => ({ display: 'none' }),\n    input: (provided: any) => ({\n      ...provided,\n      color: 'inherit',\n    }),\n    option: (_: any, state) => ({\n      background: state.isSelected\n        ? props.colors?.accent || COLORS.ACCENT\n        : state.isFocused\n        ? (props.colors?.accent || COLORS.ACCENT) + '1F'\n        : 'white',\n      color: state.isSelected ? 'white' : '#555',\n      padding: '0.25em 0.5em',\n    }),\n    placeholder: () => ({ display: 'none' }),\n    singleValue: () => ({\n      color: props.isErrored ? props.colors?.error || COLORS.ERROR : 'inherit',\n      overflow: 'hidden',\n      position: 'absolute',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      width: '100%',\n    }),\n    valueContainer: (provided: any) => ({\n      ...provided,\n      alignItems: 'flex-end',\n      margin: '0',\n      marginTop: '0.3em',\n      padding: '0',\n    }),\n  };\n  const onChange = (item: any) => {\n    props.onChange(item && item.value);\n  };\n  return (\n    <RSelect\n      name={props.name}\n      menuPlacement=\"bottom\"\n      options={props.options}\n      styles={customStyles}\n      isDisabled={props.disabled}\n      onFocus={props.onFocus}\n      onBlur={props.onBlur}\n      onChange={onChange}\n      value={props.options?.filter((option) => option.value === props.value)}\n    />\n  );\n};\n\nexport default Select;\n","import React, { ChangeEventHandler, createRef, FocusEventHandler, Fragment } from 'react';\nimport cl from 'classnames';\nimport { TInputProps } from '../types';\nimport styles from '../styles.module.css';\n\nconst FileInput = (props: TInputProps<File[]>) => {\n  const ref = createRef<HTMLInputElement>();\n  const ref2 = createRef<HTMLInputElement>();\n  const onFocus: FocusEventHandler<HTMLInputElement> = () => {\n    ref2.current?.blur();\n    ref.current?.click();\n    props.onFocus();\n    document.body.onfocus = onCancel;\n  };\n  const onChange: ChangeEventHandler<any> = (ev) => {\n    const files = ev.target.files;\n    props.onChange([...files]);\n  };\n  const onCancel = () => {\n    props.onBlur();\n    document.body.onfocus = null;\n  };\n  return (\n    <Fragment>\n      <input\n        {...props}\n        autoComplete={undefined}\n        value=\"\"\n        ref={ref}\n        style={{ display: 'none' }}\n        type=\"file\"\n        multiple={true}\n        accept={props.extensions?.join(',') || undefined}\n        onChange={onChange}\n        onBlur={onCancel}\n      />\n      <input\n        autoComplete={props.autocomplete}\n        className={cl({\n          [styles.isErrored]: props.isErrored,\n          [styles.hasHint]: props.hasHint,\n        })}\n        style={{ borderColor: props.borderColor, color: 'inherit' }}\n        value={props.value ? props.value.map((f: File) => `\"${f.name}\"`).join(', ') : undefined}\n        ref={ref2}\n        onFocus={onFocus}\n        readOnly={true}\n      />\n    </Fragment>\n  );\n};\n\nexport default FileInput;\n","import React from 'react';\nimport { TInputProps } from '../types';\n\nconst CheckboxInput = (props: TInputProps<boolean>) => {\n  return (\n    <input\n      {...props}\n      id={props.name}\n      autoComplete={props.autocomplete}\n      type=\"checkbox\"\n      defaultValue={props.value as any}\n      onChange={(ev) => props.onChange(!!ev.target.value)}\n      value={''}\n    />\n  );\n};\n\nexport default CheckboxInput;\n","import React from 'react';\nimport cl from 'classnames';\nimport { TInputProps } from '../types';\nimport styles from '../styles.module.css';\n\nconst TextArea = (props: TInputProps<string>) => {\n  return (\n    <textarea\n      {...props}\n      className={cl({\n        [styles.isErrored]: props.isErrored,\n        [styles.hasHint]: props.hasHint,\n      })}\n      style={{ borderColor: props.borderColor, color: 'inherit' }}\n      autoComplete={props.autocomplete}\n      readOnly={!props.isFocused}\n      defaultValue={props.value}\n      onFocus={props.onFocus}\n      onBlur={props.onBlur}\n      onChange={(ev) => props.onChange(ev.target.value)}\n    ></textarea>\n  );\n};\n\nexport default TextArea;\n","import React from 'react';\nimport cl from 'classnames';\nimport { TInputProps } from '../types';\nimport styles from '../styles.module.css';\n\nconst CommonInput = (props: TInputProps<string>) => {\n  return (\n    <input\n      {...props}\n      className={cl({\n        [styles.isErrored]: props.isErrored,\n        [styles.hasHint]: props.hasHint,\n      })}\n      style={{ borderColor: props.borderColor, color: 'inherit' }}\n      autoComplete={props.autocomplete}\n      readOnly={!props.isFocused}\n      type={props.type || 'text'}\n      defaultValue={props.value}\n      onFocus={props.onFocus}\n      onBlur={props.onBlur}\n      onChange={(ev) => props.onChange(ev.target.value)}\n    />\n  );\n};\n\nexport default CommonInput;\n","/**\n * Font awesome wrapper\n * Search icons in https://fontawesome.com/icons\n */\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\n\nlibrary.add(fas);\n\nconst Icon = (props: { id: string }) => <FontAwesomeIcon icon={props.id as any} style={{ color: 'inherit' }} />;\n\nexport default Icon;\n","import React, { createRef, Fragment, useEffect } from 'react';\nimport ReactMarkdownWithHtml from 'react-markdown/with-html';\nimport { createPopper } from '@popperjs/core';\nimport styles from '../../style/index.module.sass';\nimport { TFieldProps, TFieldState } from '../types';\nimport COLORS from '../Colors';\n\nfunction Hint<T, F>(props: TFieldProps<T, F> & TFieldState<T>) {\n  const { colors, errors, help, isDirty, isFocused, isTyping } = props;\n  const isError = !!errors.length && !isTyping && isDirty;\n\n  const refTarget = createRef<HTMLDivElement>();\n  const refPopper = createRef<HTMLDivElement>();\n\n  useEffect(() => {\n    if (refTarget.current && refPopper.current) {\n      createPopper(refTarget.current, refPopper.current, {\n        placement: 'top-start',\n      });\n    }\n  }, []);\n\n  let backgroundColor = undefined;\n  if (isError) backgroundColor = colors?.error || COLORS.ERROR;\n  else if (isFocused) backgroundColor = colors?.accent || COLORS.ACCENT;\n  const message = isError ? errors.join('\\n\\n') : help;\n\n  return (\n    <Fragment>\n      <div className={styles.hintTarget} ref={refTarget} />\n      <div className={styles.hint} ref={refPopper} style={{ backgroundColor }}>\n        <ReactMarkdownWithHtml disallowedTypes={['paragraph']} allowDangerousHtml unwrapDisallowed>\n          {isFocused ? message || '' : ''}\n        </ReactMarkdownWithHtml>\n        <div className={styles.arrow} data-popper-arrow></div>\n        {/* <div className={styles.spike} style={{ borderTopColor: backgroundColor }} /> */}\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Hint;\n","import React, { Component } from 'react';\nimport ReactMarkdownWithHtml from 'react-markdown/with-html';\nimport styles from '../../style/index.module.sass';\nimport { TFieldProps, TFieldState } from '../types';\nimport cl from 'classnames';\nimport Input from '../Input';\nimport Icon from '../Icon';\nimport COLORS from '../Colors';\nimport Hint from './Hint';\n\nconst ERROR_HIDE_DELAY = 1000;\n\ntype Props<T, F> = TFieldProps<T, F>;\ntype State<T> = TFieldState<T>;\n\nexport class Field<T, F> extends Component<Props<T, F>, State<T>> {\n  static initialState = { errors: [], isDirty: false, isFocused: false, isTyping: false, value: undefined };\n  private typingTimeout: NodeJS.Timeout | undefined = undefined;\n\n  constructor(props: Props<T, F>) {\n    super(props);\n    this.state = this.getStateAndValidate(props);\n  }\n\n  private getStateAndValidate = (props: Props<T, F>): State<T> => {\n    const state = {\n      ...Field.initialState,\n      value: props.value,\n    };\n    this.validate(props);\n    return state;\n  };\n\n  public validate = (props: Props<T, F> = this.props) => {\n    props.validator(props.value).then((errors) => this.setState({ errors: errors || [] }));\n  };\n\n  public componentDidUpdate = (prevProps: Props<T, F>) => {\n    if (prevProps.value !== this.state.value) {\n      const newState = {\n        ...this.getStateAndValidate(this.props),\n        isDirty: this.state.isDirty,\n        isFocused: this.state.isFocused,\n        isTyping: this.state.isTyping,\n      };\n      this.setState(newState);\n    }\n  };\n\n  private onChange = async (value: T) => {\n    // Do not show errors while typing\n    clearTimeout(this.typingTimeout as any);\n    this.typingTimeout = setTimeout(() => {\n      this.setState({ isTyping: false });\n    }, ERROR_HIDE_DELAY);\n\n    const { validator } = this.props;\n    const errors = (await validator(value)) || ['x'];\n    this.setState({ errors, isDirty: true, isTyping: true, value });\n    this.props.onChange(value, !errors.length);\n  };\n\n  private renderStateIcon = () => {\n    const { colors } = this.props;\n    const { errors, isDirty, isFocused, isTyping } = this.state;\n    const isError = !!errors.length && !isTyping && isDirty;\n    let color = 'inherit' || undefined;\n    if (isError) color = colors?.error || COLORS.ERROR;\n    else if (isFocused) color = colors?.accent || COLORS.ACCENT;\n    return (\n      <div\n        className={cl({\n          [styles.icon]: true,\n          [styles.isFocused]: isFocused,\n          [styles.isErrored]: isError,\n        })}\n        style={{ color }}\n      >\n        <Icon id={isError ? 'exclamation-triangle' : 'question-circle'} />\n      </div>\n    );\n  };\n\n  private renderInput = () => {\n    const { help } = this.props;\n    const { errors, isDirty, isFocused, isTyping, value } = this.state;\n    const isError = !!errors.length && !isTyping && isDirty;\n    return (\n      <Input\n        {...this.props}\n        hasHint={isError || !!help}\n        isErrored={isError}\n        isFocused={isFocused}\n        value={value}\n        onChange={this.onChange}\n        onFocus={() => this.setState({ isFocused: true })}\n        onBlur={() => this.setState({ isFocused: false })}\n      />\n    );\n  };\n\n  // eslint-disable-next-line complexity\n  private renderLabel = () => {\n    const { colors, disabled, icon, label, name, required } = this.props;\n    const { errors, isDirty, isFocused, isTyping, value } = this.state;\n    const isEmpty = !value;\n    const isError = !!errors.length && !isTyping && isDirty;\n    let color = 'inherit';\n    if (isError) color = colors?.error || COLORS.ERROR;\n    else if (isFocused) color = colors?.accent || COLORS.ACCENT;\n    return (\n      <label\n        className={cl({\n          [styles.isFocused]: isFocused,\n          [styles.isEmpty]: isEmpty,\n          [styles.isDisabled]: disabled,\n        })}\n        style={{ color }}\n      >\n        <span style={{ flex: 1 }}>\n          {icon && <Icon id={icon} />} {label || name} {required && <span>*</span>}\n        </span>\n        {Array.isArray(value) && !!value.length && <span>({value.length})</span>}\n      </label>\n    );\n  };\n\n  private renderCheckbox = () => {\n    const { label, name } = this.props;\n    return (\n      <div className={`${styles.checkbox}`} style={{ color: 'inherit' }}>\n        {this.renderInput()}{' '}\n        <label htmlFor={name}>\n          <ReactMarkdownWithHtml disallowedTypes={['paragraph']} allowDangerousHtml unwrapDisallowed>\n            {label || name}\n          </ReactMarkdownWithHtml>\n        </label>\n      </div>\n    );\n  };\n\n  public render = () => {\n    const { disabled, help, type } = this.props;\n    const { errors = [], isDirty, isTyping, isFocused } = this.state;\n    const isError = !!errors.length && !isTyping && isDirty;\n    const hasIcon = isError || help;\n    const hasHint = hasIcon && isFocused;\n    if (type === 'check') return this.renderCheckbox();\n    return (\n      <div\n        className={cl({\n          [styles.field]: true,\n          [styles.isErrored]: isError,\n          [styles.isDisabled]: disabled,\n        })}\n      >\n        {this.renderLabel()}\n        {this.renderInput()}\n        {hasHint && this.renderStateIcon()}\n        {hasHint && <Hint<T, F> {...this.props} {...this.state} />}\n      </div>\n    );\n  };\n}\n","import _ from 'lodash';\nimport React, { Component, createRef, useEffect } from 'react';\nimport styles from '../style/index.module.sass';\nimport { Field } from './Field';\nimport { TColors, TField } from './types';\n\ntype TypedTField<T> =\n  | (TField<string, T> & { type: 'text' })\n  | (TField<string, T> & { type: 'text-multiline' })\n  | (TField<Date, T> & { type: 'date' })\n  | (TField<File[], T> & { type: 'files' })\n  | (TField<number, T> & { type: 'number' })\n  | (TField<boolean, T> & { type: 'check' })\n  | Omit<TField<string, T>, 'type'>;\n\nexport type TForm<T> = {\n  delay?: number;\n  colors?: TColors;\n  fields: TypedTField<T>[]; // @TODO Could this \"any\" be avoided?\n  onChange: (value: Partial<T>, isValid: boolean) => void;\n  value?: Partial<T>;\n};\n\ntype State<T> = {\n  validity: { [key: string]: boolean };\n  value: Partial<T>;\n};\n\nexport class Form<T> extends Component<TForm<T>, State<T>> {\n  constructor(props: TForm<T>) {\n    super(props);\n    this.state = {\n      validity: { something: false }, // Not valid by default, until first validation\n      value: this.props.value || {},\n    };\n    Promise.all(\n      props.fields.map(async (field) => {\n        const errors = await validateField<any, any>(field, props.value?.[field.name], props.value);\n        return errors.length > 0;\n      })\n    ).then((errors) => {\n      const validity = {};\n      props.fields.forEach((field, i) => {\n        validity[field.name as string] = !errors[i];\n      });\n      this.setState({ validity });\n    });\n  }\n\n  private propagateOnChange = _.debounce(() => {\n    const isValid = !Object.values(this.state.validity).some((b) => !b);\n    this.props.onChange(this.state.value, isValid);\n  }, this.props.delay || 500);\n\n  private onChange<X>(field: TField<X, T>, value: X, isValid: boolean): void {\n    this.setState({\n      validity: { ...this.state.validity, [field.name]: isValid },\n      value: { ...this.state.value, [field.name]: value },\n    });\n    this.propagateOnChange();\n  }\n\n  public componentDidUpdate = (prevProps: TForm<T>) => {\n    if (prevProps.value !== this.props.value) {\n      this.setState({ value: this.props.value || {} });\n    }\n  };\n\n  public render = () => {\n    const { fields } = this.props;\n    const { value } = this.state;\n    return (\n      <div className={styles.formelio}>\n        <form>\n          {fields.map((field) => (\n            <div key={field.name} className={styles.fieldWrapper} style={{ flexBasis: (field.size || 1) * 100 + '%' }}>\n              {getField<T>(field, value, this.onChange.bind(this), this.props.colors)}\n            </div>\n          ))}\n        </form>\n      </div>\n    );\n  };\n}\n\n// @TODO Don't use \"any\" here\nfunction getField<T>(field: any, value: any, onChange: any, colors?: TColors) {\n  switch (field.type) {\n    case 'date':\n      return <FieldWrapper<Date, T> {...{ colors, field, formValue: value, onChange }} />;\n    case 'number':\n      return <FieldWrapper<number, T> {...{ colors, field, formValue: value, onChange }} />;\n    case 'files':\n      return <FieldWrapper<File[], T> {...{ colors, field, formValue: value, onChange }} />;\n    case 'check':\n      return <FieldWrapper<boolean, T> {...{ colors, field, formValue: value, onChange }} />;\n    default:\n      return <FieldWrapper<string, T> {...{ colors, field, formValue: value, onChange }} />;\n  }\n}\n\n/**\n * Intermediate component to let field handlers receive form data without passing\n * any form info to the Field class itself. This way <Field/> does not need to know about <Form/>\n */\nfunction FieldWrapper<T, F>(props: {\n  field: TField<T, F>;\n  formValue: Partial<F>;\n  onChange: (field: TField<T, F>, value: T, isValid: boolean) => void;\n  colors?: TColors;\n}) {\n  const ref = createRef<Field<T, F>>();\n  const onChange = (value: T, isValid: boolean) => props.onChange(props.field, value, isValid);\n  const validator = async (value?: T): Promise<string[]> => {\n    return validateField(props.field, value, props.formValue);\n  };\n  useEffect(() => {\n    ref.current?.validate();\n  }, [props.formValue]);\n  return (\n    <Field<T, F>\n      {...props.field}\n      colors={props.colors}\n      ref={ref}\n      value={props.formValue[props.field.name] as any}\n      onChange={onChange}\n      validator={validator}\n    />\n  );\n}\n\nasync function validateField<T, F>(\n  field: TField<T, F>,\n  value: T | undefined,\n  formValue?: Partial<F>\n): Promise<string[]> {\n  if (field.required && !value) return ['Required field'];\n  if (!field.validator) return [];\n  return field.validator(value, formValue || {});\n}\n","import React from 'react';\nimport { Form, TForm } from 'formelio';\n\nconst title = 'Basic usage';\n\nconst description = `\nHello bla bla, this is an example\n\nwith two lines\n`;\n\ntype TValue = {\n  name: string;\n  surname: string;\n  birthday: Date;\n};\n\ntype Props = {\n  value: TForm<TValue>['value'];\n  onChange: TForm<TValue>['onChange'];\n};\n\nconst Component = (props: Props) => {\n  const fields: TForm<TValue>['fields'] = [\n    { name: 'name', required: true, size: 0.5 },\n    { name: 'surname', size: 0.5 },\n    { name: 'birthday', type: 'date' },\n  ];\n  const { value, onChange } = props;\n  return <Form<TValue> {...{ fields, value, onChange }} />;\n};\n\nconst initialState = `{}`;\n\nconst fields = `\nconst fields = [\n  { name: 'name', required: true, size: 0.5 },\n  { name: 'surname', size: 0.5 },\n  { name: 'birthday', type: 'date' },\n];\n`.trim();\n\nconst tileClass = 'is-light';\n\nexport default { title, description, Component, source: { fields, initialState }, tileClass };\n","import React, { useState } from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { github } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport 'formelio/dist/index.css';\nimport { Basic } from './examples';\nimport { TForm } from 'formelio';\n\nconst App = () => {\n  return (\n    <div className=\"container\">\n      <Example {...Basic} />\n    </div>\n  );\n};\n\nconst indent = (code: string, level: number) =>\n  code\n    .split('\\n')\n    .map((l) => `${' '.repeat(level)}${l}`)\n    .join('\\n')\n    .trimEnd();\n\nconst genSource = ({ fields, initialState }: typeof Basic.source) =>\n  `\nimport React, { useState } from 'react';\nimport { Form } from 'formelio';\n\nconst MyForm = () => {\n  const [value, setValue] = useState(${initialState});\n  const [isValid, setIsValid] = useState(false);\n  const onChange = (value, isValid) => {\n    setValue(value);\n    setIsValid(isValid);\n  };\n${indent(fields, 2)}\n  return (\n    <Form {...{fields, value, onChange}} />\n  );\n}`.trim();\n\nfunction Example(props: typeof Basic) {\n  const [value, setValue] = useState({});\n  const [isValid, setIsValid] = useState(false);\n  const onChange: TForm<any>['onChange'] = async (value, isValid) => {\n    setValue(value);\n    setIsValid(isValid);\n  };\n\n  return (\n    <>\n      <h3>{props.title}</h3>\n      <p>{props.description}</p>\n\n      <div className=\"tile is-parent\">\n        <div className={`tile is-child notification ${props.tileClass} content`}>\n          <div style={{ display: 'flex', flexDirection: 'column' }}>\n            <div style={{ flex: 1, marginBottom: '1em' }}>\n              <h4>Result</h4>\n              <props.Component onChange={onChange} value={value} />\n            </div>\n            <div style={{ flex: 0 }}>\n              <h4>State</h4>\n              <SyntaxHighlighter language=\"javascript\" style={github}>\n                {JSON.stringify({ isValid, value }, null, 2)}\n              </SyntaxHighlighter>\n            </div>\n          </div>\n        </div>\n        <div\n          className=\"tile is-child notification is-light content\"\n          style={{ borderRadius: 0, overflow: 'hidden', padding: '1em', flexDirection: 'column' }}\n        >\n          <h4>Source code</h4>\n          <SyntaxHighlighter language=\"javascript\" style={github}>\n            {genSource(props.source)}\n          </SyntaxHighlighter>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}