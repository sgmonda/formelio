{"version":3,"sources":["../../node_modules/classnames/index.js","../../src/Colors.tsx","../../src/Input/Select.tsx","../../src/modules/flatten.ts","../../src/modules/clone.ts","../../src/modules/getBorderColor.ts","../../src/modules/unflatten.ts","../../src/Input/index.tsx","../../src/Input/Date.tsx","../../src/Input/File.tsx","../../src/Input/Checkbox.tsx","../../src/Input/TextArea.tsx","../../src/Input/Input.tsx","../../src/Icon.tsx","../../src/Markdown.tsx","../../src/Field/Hint.tsx","../../src/Component.tsx","../../src/Field/Field.tsx","../../src/BasicForm.tsx","../../src/DynamicForm.tsx","Examples/Login.tsx","Examples/Basic.tsx","Examples/Other.tsx","Examples/Dynamic.tsx","Markdown.tsx","Examples/index.tsx","App.tsx","index.tsx"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","window","getSelect","isMulti","Select","props","customStyles","control","background","borderBottom","borderColor","cursor","display","paddingTop","transition","indicatorSeparator","indicatorsContainer","input","provided","color","marginTop","width","multiValue","border","COLORS","marginBottom","marginRight","multiValueLabel","multiValueRemove","opacity","option","state","padding","placeholder","singleValue","overflow","position","textOverflow","whiteSpace","valueContainer","alignItems","margin","options","label","value","name","menuPlacement","styles","isDisabled","disabled","onFocus","onBlur","onChange","item","values","it","v","Tags","isPrimitiveType","flatten","object","accum","Date","partial","clone","obj","copy","JSON","getBorderColor","isFocused","colors","parts","test","setValue","unflatten","type","inputProps","React","DatePickerWrapperStyles","createGlobalStyle","className","id","selected","undefined","date","onCalendarClose","dateFormat","wrapperClassName","popperPlacement","ref","createRef","ref2","onCancel","document","required","max","min","autoComplete","style","multiple","accept","ev","files","autocomplete","cl","hasHint","f","readOnly","File","isChecked","checked","Checkbox","useState","useRef","useEffect","err","console","setCaretPosition","TextArea","parseFloat","Input","library","Icon","icon","fontSize","height","paddingBottom","LinkRenderer","href","target","rel","Markdown","disallowedTypes","allowDangerousHtml","unwrapDisallowed","renderers","link","Hint","isTyping","isError","errors","refTarget","refPopper","createPopper","placement","backgroundColor","message","text","inline","Component","constructor","componentDidMount","componentWillUnmount","isMounted","this","_Component","Field","getStateAndValidate","validate","componentDidUpdate","prevProps","Number","newState","isDirty","a","setTimeout","validator","renderStateIcon","renderInput","help","isErrored","renderLabel","isEmpty","htmlFor","flex","renderCheckbox","render","hasIcon","genId","field","parseFields","fields","base","nextBase","BasicForm","init","Promise","validateField","validity","propagateOnChange","isValid","b","hasValueChanged","hasFieldsChanged","fieldGroups","groupFields","borderLeft","group","Colors","marginLeft","paddingLeft","depth","flexBasis","formValue","getField","something","groups","currentGroup","FieldWrapper","Form","cleanFields","cleanValue","getInconditionalFields","nextFields","insertField","isPresent","promises","condition","partials","re","subfields","sf","keys","nextValue","description","source","initialState","tileClass","title","size","found","citiesOptions","cities","filter","isFound","slice","map","when","childrenCount","children","birthdate","EXAMPLES","Login","Dynamic","Basic","city","Example","setIsValid","theme","minHeight","flexDirection","language","dark","github","stringify","indent","maxLength","genSource","trim","code","level","split","l","repeat","trimEnd","Examples","App","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.c49bf319.chunk.js","sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","export default {\n  ACCENT: '#5196D5',\n  ERROR: '#D65947',\n};\n","import React from 'react';\nimport RSelect, { StylesConfig } from 'react-select';\nimport { TInputProps } from '../types';\nimport COLORS from '../Colors';\n\nfunction getSelect<T>(isMulti: boolean = false) {\n  const Select = (props: TInputProps<T>) => {\n    const customStyles: StylesConfig<any, any, any> = {\n      control: () => ({\n        background: 'none !important',\n        borderBottom: `solid 0.13em`,\n        borderColor: props.borderColor,\n        cursor: 'text',\n        display: 'flex',\n        paddingTop: isMulti ? '1.2em' : '0',\n        transition: '0.2s ease-in-out',\n      }),\n      indicatorSeparator: () => ({ display: 'none' }),\n      indicatorsContainer: () => ({ display: 'none' }),\n      input: (provided: any) => ({\n        ...provided,\n        color: 'inherit',\n        marginTop: isMulti ? '-1em' : '0.2em',\n        width: '5em',\n      }),\n      multiValue: () => ({\n        border: `solid 1px ${props.colors?.accent || COLORS.ACCENT}`,\n        display: 'flex',\n        marginBottom: '0.2em',\n        marginRight: '0.2em',\n      }),\n      multiValueLabel: (provided: any) => ({\n        ...provided,\n        color: 'inherit',\n      }),\n      multiValueRemove: (provided: any) => ({\n        ...provided,\n        '&:hover': {\n          background: 'none',\n          cursor: 'pointer',\n          opacity: 1,\n        },\n        color: 'inherit !important',\n        opacity: 0.5,\n      }),\n      option: (_: any, state) => ({\n        background: state.isSelected\n          ? props.colors?.accent || COLORS.ACCENT\n          : state.isFocused\n          ? (props.colors?.accent || COLORS.ACCENT) + '1F'\n          : 'white',\n        color: state.isSelected ? 'white' : '#555',\n        padding: '0.25em 0.5em',\n      }),\n      placeholder: () => ({ display: 'none' }),\n      singleValue: () => ({\n        color: props.isErrored ? props.colors?.error || COLORS.ERROR : 'inherit',\n        overflow: 'hidden',\n        position: 'absolute',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        width: '100%',\n      }),\n      valueContainer: (provided: any) => ({\n        ...provided,\n        alignItems: isMulti ? 'start' : 'flex-end',\n        margin: '0',\n        marginTop: '0.3em',\n        padding: '0',\n      }),\n    };\n    const onChange = (item: any) => {\n      if (isMulti) {\n        const values = {};\n        [...(item.map((it: any) => it.value) as any)].forEach((v) => (values[v] = true));\n        props.onChange(Object.keys(values) as any);\n      } else {\n        props.onChange(item && item.value);\n      }\n    };\n    const options = props.options?.map(({ value, label }) => ({ label: label || value, value }));\n    const value = options?.filter((option) =>\n      Array.isArray(props.value) ? props.value.includes(option.value) : option.value === props.value\n    );\n    return (\n      <RSelect\n        name={props.name}\n        menuPlacement=\"bottom\"\n        options={options}\n        styles={customStyles}\n        isMulti={isMulti}\n        isDisabled={props.disabled}\n        onFocus={props.onFocus}\n        onBlur={props.onBlur}\n        onChange={onChange}\n        value={value}\n      />\n    );\n  };\n  return Select;\n}\n\nexport const Tags = getSelect<string[]>(true);\n\nexport const Select = getSelect<string>();\n","const isPrimitiveType = (value: any) => {\n  return value !== Object(value);\n};\n\nexport const flatten = (object: Object): { [key: string]: any } => {\n  if (object === null || object === undefined) return {};\n  const result: { [key: string]: any } = {};\n  return Object.entries(object).reduce((accum, [key, value]) => {\n    if (value instanceof Date) accum[key] = new Date(Date.parse(value as any));\n    else if (typeof value !== 'object' || value instanceof File) accum[key] = value;\n    else if (Array.isArray(value) && value.every(isPrimitiveType)) accum[key] = value;\n    else {\n      const partial = flatten(value);\n      Object.entries(partial).forEach(([k, v]) => {\n        partial[`${key}.${k}`] = v;\n        delete partial[k];\n      });\n      accum = { ...accum, ...partial };\n    }\n    return accum;\n  }, result);\n};\n","export const clone = <T>(obj: any): T => {\n  if (!obj) return obj;\n  if (Array.isArray(obj)) return obj.map(clone) as any;\n  if (obj instanceof Date) return new Date(obj) as any;\n  if (typeof obj === 'function') return obj;\n  if (typeof obj === 'object') {\n    const copy = {};\n    Object.entries(obj).forEach(([key, val]) => {\n      copy[key] = clone(val);\n    });\n    return copy as any;\n  }\n  return JSON.parse(JSON.stringify(obj));\n};\n","import { TInputProps } from '../types';\nimport COLORS from '../Colors';\n\nexport const getBorderColor = (props: Partial<TInputProps<any>>) => {\n  const { colors, isErrored, isFocused } = props;\n  let borderColor = 'inherit';\n  if (isErrored) borderColor = colors?.error || COLORS.ERROR;\n  else if (isFocused) borderColor = colors?.accent || COLORS.ACCENT;\n  return { borderColor };\n};\n","function setValue(object: { [key: string]: any }, key: string, value: any): void {\n  const parts = key.split('.');\n  if (parts.length === 1) {\n    object[parts[0]] = value;\n    return;\n  }\n  object[parts[0]] = object[parts[0]] || (/^\\d+$/.test(parts[1]) ? [] : {});\n  return setValue(object[parts[0]], parts.slice(1).join('.'), value);\n}\nexport function unflatten<T>(object: { [key: string]: any }): T {\n  const accum: { [key: string]: any } = {};\n  const obj = Object.entries(object).reduce((accum, [key, value]) => {\n    if (!key.includes('.')) {\n      accum[key] = value;\n    } else {\n      const parts = key.split('.');\n      accum[parts[0]] = accum[parts[0]] || (/^\\d+$/.test(parts[1]) ? [] : {});\n      setValue(accum[parts[0]], parts.slice(1).join('.'), value);\n    }\n    return accum;\n  }, accum);\n  return obj as T;\n}\n","import { TInputProps } from '../types';\nimport { Select, Tags } from './Select';\nimport File from './File';\nimport Date from './Date';\nimport Checkbox from './Checkbox';\nimport Input from './Input';\nimport TextArea from './TextArea';\nimport React from 'react';\nimport { getBorderColor } from '../modules';\n\nexport default (props: TInputProps<any>) => {\n  const { options, type } = props;\n  const inputProps = { ...props, ...getBorderColor(props) };\n  if (options) {\n    if (type === 'tags') return <Tags {...inputProps} />;\n    return <Select {...inputProps} />;\n  }\n  if (type === 'date') return Date(inputProps);\n  if (type === 'files') return File(inputProps);\n  if (type === 'check') return Checkbox(inputProps);\n  if (type === 'text-multiline') return TextArea(inputProps);\n  return Input(inputProps);\n};\n","import React from 'react';\nimport DatePicker from 'react-datepicker';\nimport './Date.module.css';\nimport styles from '../style/index.module.sass';\nimport { createGlobalStyle } from 'styled-components';\nimport { TInputProps } from '../types';\n\nconst DateInput = (props: TInputProps<Date>) => {\n  const DatePickerWrapperStyles = createGlobalStyle`\n    .date_picker {\n      width: 100%\n    }\n    .date_picker input {\n      color: inherit;\n      border-color: ${props.borderColor};\n    }\n  `;\n  const onChange = (date: Date | [Date, Date]) => {\n    if (typeof date === 'string') props.onChange(new Date(Date.parse(date)));\n    props.onChange(date as Date);\n    // props.onBlur();\n  };\n  return (\n    <div className={styles.datepicker}>\n      <DatePicker\n        id={props.id}\n        selected={props.value ? new Date(props.value) : undefined}\n        onChange={onChange}\n        onFocus={props.onFocus}\n        onCalendarClose={props.onBlur}\n        onBlur={props.onBlur}\n        dateFormat={props.format || 'yyyy-MM-dd'}\n        wrapperClassName={'date_picker'}\n        popperPlacement=\"bottom-start\"\n      />\n      <DatePickerWrapperStyles />\n    </div>\n  );\n};\n\nexport default DateInput;\n","import React, { ChangeEventHandler, createRef, FocusEventHandler, Fragment } from 'react';\nimport cl from 'classnames';\nimport { TInputProps } from '../types';\nimport styles from '../style/index.module.sass';\n\nconst FileInput = (props: TInputProps<File[]>) => {\n  const ref = createRef<HTMLInputElement>();\n  const ref2 = createRef<HTMLInputElement>();\n  const onFocus: FocusEventHandler<HTMLInputElement> = () => {\n    ref2.current?.blur();\n    ref.current?.click();\n    props.onFocus();\n    document.body.onfocus = onCancel;\n  };\n  const onChange: ChangeEventHandler<any> = (ev) => {\n    const files = ev.target.files;\n    props.onChange([...files]);\n  };\n  const onCancel = () => {\n    props.onBlur();\n    document.body.onfocus = null;\n  };\n  return (\n    <Fragment>\n      <input\n        id={props.id}\n        required={props.required}\n        disabled={props.disabled}\n        max={props.max}\n        min={props.min}\n        name={props.name}\n        autoComplete={undefined}\n        value=\"\"\n        ref={ref}\n        style={{ display: 'none' }}\n        type=\"file\"\n        multiple={true}\n        accept={props.extensions?.join(',') || undefined}\n        onChange={onChange}\n        onBlur={onCancel}\n      />\n      <input\n        autoComplete={props.autocomplete}\n        className={cl({\n          [styles.isErrored]: props.isErrored,\n          [styles.hasHint]: props.hasHint,\n        })}\n        style={{ borderColor: props.borderColor, color: 'inherit' }}\n        value={props.value ? props.value.map((f: File) => `\"${f.name}\"`).join(', ') : undefined}\n        ref={ref2}\n        onFocus={onFocus}\n        readOnly={true}\n      />\n    </Fragment>\n  );\n};\n\nexport default FileInput;\n","import React, { ChangeEventHandler } from 'react';\nimport { TInputProps } from '../types';\n\nconst CheckboxInput = (props: TInputProps<boolean>) => {\n  const onChange: ChangeEventHandler<any> = (ev) => {\n    const isChecked = !!ev.target.checked;\n    props.onChange(isChecked);\n  };\n\n  return (\n    <input\n      id={props.id}\n      required={props.required}\n      disabled={props.disabled}\n      max={props.max}\n      min={props.min}\n      name={props.name}\n      autoComplete={props.autocomplete}\n      type=\"checkbox\"\n      // defaultValue={props.value as any}\n      onChange={onChange}\n      checked={!!props.value}\n      value={''}\n    />\n  );\n};\n\nexport default CheckboxInput;\n","import React, { ChangeEvent, ChangeEventHandler, useEffect, useRef, useState } from 'react';\nimport cl from 'classnames';\nimport { TInputProps } from '../types';\nimport styles from '../style/index.module.sass';\n\nconst TextArea = (props: TInputProps<string>) => {\n  const [caretPosition, setCaretPosition] = useState<number>(props.value?.length || 0);\n  const ref = useRef<HTMLTextAreaElement | null>(null);\n\n  const onChange: ChangeEventHandler<any> = (ev: ChangeEvent<HTMLTextAreaElement>) => {\n    setCaretPosition(ref?.current?.selectionStart || props.value?.length || 0);\n    props.onChange(ev.target.value);\n  };\n\n  useEffect(() => {\n    try {\n      ref?.current?.setSelectionRange(caretPosition, caretPosition);\n    } catch (err) {\n      console.warn(`Selection range cannot be set`);\n    }\n  }, [props.value]);\n\n  return (\n    <textarea\n      id={props.id}\n      ref={ref}\n      required={props.required}\n      disabled={props.disabled}\n      name={props.name}\n      className={cl({\n        [styles.isErrored]: props.isErrored,\n        [styles.hasHint]: props.hasHint,\n      })}\n      style={{ borderColor: props.borderColor, color: 'inherit' }}\n      autoComplete={props.autocomplete || props.name?.split('.').pop()}\n      value={props.value || ''}\n      onFocus={props.onFocus}\n      onBlur={props.onBlur}\n      onChange={onChange}\n    ></textarea>\n  );\n};\n\nexport default TextArea;\n","import React, { ChangeEventHandler, useEffect, useRef, useState } from 'react';\nimport cl from 'classnames';\nimport { TInputProps } from '../types';\nimport styles from '../style/index.module.sass';\nimport COLORS from '../Colors';\n\nconst CommonInput = (props: TInputProps<string>) => {\n  const { colors } = props;\n  let color = 'inherit';\n  if (props.isErrored) color = colors?.error || COLORS.ERROR;\n\n  const [caretPosition, setCaretPosition] = useState<number>(props.value?.length || 0);\n  const ref = useRef<HTMLInputElement | null>(null);\n\n  const onChange: ChangeEventHandler<any> = (ev) => {\n    setCaretPosition(ref?.current?.selectionStart || props.value?.length || 0);\n    let value = ev.target.value;\n    if (props.type === 'number') value = parseFloat(value);\n    props.onChange(value);\n  };\n\n  useEffect(() => {\n    try {\n      ref?.current?.setSelectionRange(caretPosition, caretPosition);\n    } catch (err) {\n      console.warn(`Selection range cannot be set`);\n    }\n  }, [props.value]);\n\n  return (\n    <input\n      id={props.id}\n      ref={ref}\n      required={props.required}\n      disabled={props.disabled}\n      max={props.max}\n      min={props.min}\n      name={props.name}\n      className={cl({\n        [styles.isErrored]: props.isErrored,\n        [styles.hasHint]: props.hasHint,\n      })}\n      style={{ borderColor: props.borderColor, color }}\n      autoComplete={props.autocomplete || props.name?.split('.').pop()}\n      type={props.type || 'text'}\n      value={props.value || ''}\n      onFocus={props.onFocus}\n      onBlur={props.onBlur}\n      onChange={onChange}\n    />\n  );\n};\n\nexport default CommonInput;\n","/**\n * Font awesome wrapper\n * Search icons in https://fontawesome.com/icons\n */\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\n\nlibrary.add(fas);\n\nconst Icon = (props: { id: string }) => (\n  <FontAwesomeIcon\n    icon={props.id as any}\n    style={{ color: 'inherit', fontSize: 'small', height: '1.1em', marginRight: '0.25em', paddingBottom: '0.1em' }}\n  />\n);\n\nexport default Icon;\n","import React from 'react';\nimport ReactMarkdownWithHtml from 'react-markdown/with-html';\n\nconst LinkRenderer = (props: any) => (\n  <a href={props.href} target=\"_blank\" rel=\"noopener noreferrer\">\n    {props.children}\n  </a>\n);\n\nconst Markdown = (props: { text: string; inline?: boolean }) => (\n  <ReactMarkdownWithHtml\n    disallowedTypes={props.inline ? ['paragraph'] : []}\n    allowDangerousHtml\n    unwrapDisallowed\n    renderers={{ link: LinkRenderer }}\n  >\n    {props.text}\n  </ReactMarkdownWithHtml>\n);\n\nexport default Markdown;\n","import React, { createRef, Fragment, useEffect } from 'react';\nimport { createPopper } from '@popperjs/core';\nimport styles from '../style/index.module.sass';\nimport { TFieldProps, TFieldState } from '../types';\nimport COLORS from '../Colors';\nimport Markdown from '../Markdown';\n\nfunction Hint<T, F>(props: TFieldProps<T, F> & TFieldState<T>) {\n  const { colors, errors, help, isDirty, isFocused, isTyping } = props;\n  const isError = !!errors.length && !isTyping && isDirty;\n\n  const refTarget = createRef<HTMLDivElement>();\n  const refPopper = createRef<HTMLDivElement>();\n\n  useEffect(() => {\n    if (refTarget.current && refPopper.current) {\n      createPopper(refTarget.current, refPopper.current, { placement: 'top-start' });\n    }\n  }, []);\n\n  let backgroundColor = undefined;\n  if (isError) backgroundColor = colors?.error || COLORS.ERROR;\n  else if (isFocused) backgroundColor = colors?.accent || COLORS.ACCENT;\n  const message = isError ? errors.join('<br/>') : help;\n\n  return (\n    <Fragment>\n      <div className={styles.hintTarget} ref={refTarget} />\n      <div className={styles.hint} ref={refPopper} style={{ backgroundColor }}>\n        <Markdown text={isFocused ? message || '' : ''} inline />\n        <div className={styles.arrow} data-popper-arrow></div>\n        {/* <div className={styles.spike} style={{ borderTopColor: backgroundColor }} /> */}\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Hint;\n","/**\n * This is needed to avoid state updates when a promise is finished.\n * This is an antipattern, as described in https://es.reactjs.org/blog/2015/12/16/ismounted-antipattern.html\n * so this approach should be replaced by something more sofisticated.\n * For the moment, there is no way to cancel promises, so we need to check if component\n * is mounted once they're resolved.\n */\n\nimport { Component as _Component } from 'react';\n\nexport class Component<Props, State> extends _Component<Props, State> {\n  protected _isMounted: boolean;\n  constructor(props: Props) {\n    super(props);\n    this._isMounted = false;\n  }\n  // public set isMounted(status: boolean) {\n  //   this._isMounted = status;\n  // }\n  public get isMounted() {\n    return this._isMounted;\n  }\n  public componentDidMount = () => {\n    this._isMounted = true;\n  };\n  public componentWillUnmount = () => {\n    this._isMounted = false;\n  };\n}\n","import React from 'react';\nimport styles from '../style/index.module.sass';\nimport { TFieldProps, TFieldState } from '../types';\nimport cl from 'classnames';\nimport Input from '../Input';\nimport Icon from '../Icon';\nimport COLORS from '../Colors';\nimport Hint from './Hint';\nimport { getBorderColor } from '../modules';\nimport Markdown from '../Markdown';\nimport { Component } from '../Component';\n\nconst ERROR_HIDE_DELAY = 1000;\n\nexport type Props<T, F> = TFieldProps<T, F>;\ntype State<T> = TFieldState<T>;\n\nexport class Field<T, F> extends Component<Props<T, F>, State<T>> {\n  static initialState = { errors: [], isDirty: false, isFocused: false, isTyping: false, value: undefined };\n\n  constructor(props: Props<T, F>) {\n    super(props);\n    this.state = this.getStateAndValidate(props);\n  }\n\n  private getStateAndValidate = (props: Props<T, F>): State<T> => {\n    const state = {\n      ...Field.initialState,\n      value: props.value,\n    };\n    this.validate(props);\n    return state;\n  };\n\n  public validate = (props: Props<T, F> = this.props) => {\n    props.validator?.(props.value as T).then((errors) => {\n      if (!this._isMounted) return;\n      this.setState({ errors: errors || [] });\n    });\n  };\n\n  public componentDidUpdate = (prevProps: Props<T, F>) => {\n    if (prevProps.value !== this.state.value && !(Number.isNaN(prevProps.value) && Number.isNaN(this.state.value))) {\n      const newState = {\n        ...this.getStateAndValidate(this.props),\n        isDirty: this.state.isDirty,\n        isFocused: this.state.isFocused,\n        isTyping: this.state.isTyping,\n      };\n      this.setState(newState);\n    }\n    const shouldReset =\n      Object.keys(prevProps.formValue || {}).length && !Object.keys(this.props.formValue || {}).length;\n    if (shouldReset) {\n      this.setState({ isDirty: false });\n    }\n  };\n\n  private onChange = async (value: T) => {\n    // Do not show errors while typing\n    setTimeout(() => {\n      if (!this.isMounted) return;\n      this.setState({ isTyping: false });\n    }, ERROR_HIDE_DELAY);\n\n    const { validator } = this.props;\n    const errors = (await validator?.(value)) || [];\n    if (!this._isMounted) return;\n    this.setState({ errors, isDirty: true, isTyping: true, value });\n    this.props.onChange(value, !errors.length);\n  };\n\n  private renderStateIcon = () => {\n    const { colors } = this.props;\n    const { errors, isDirty, isFocused, isTyping } = this.state;\n    const isError = !!errors.length && !isTyping && isDirty;\n    let color = 'inherit' || undefined;\n    if (isError) color = colors?.error || COLORS.ERROR;\n    else if (isFocused) color = colors?.accent || COLORS.ACCENT;\n    return (\n      <div\n        className={cl({\n          [styles.icon]: true,\n          [styles.isFocused]: isFocused,\n          [styles.isErrored]: isError,\n        })}\n        style={{ color }}\n      >\n        <Icon id={isError ? 'exclamation-triangle' : 'question-circle'} />\n      </div>\n    );\n  };\n\n  private renderInput = () => {\n    const { help } = this.props;\n    const { errors, isDirty, isFocused, isTyping, value } = this.state;\n    const isError = !!errors.length && !isTyping && isDirty;\n    return (\n      <Input\n        {...this.props}\n        hasHint={isError || !!help}\n        isErrored={isError}\n        isFocused={isFocused}\n        value={value}\n        onChange={this.onChange}\n        onFocus={() => this.setState({ isFocused: true })}\n        onBlur={() => this.setState({ isFocused: false })}\n      />\n    );\n  };\n\n  // eslint-disable-next-line complexity\n  private renderLabel = () => {\n    const { colors, disabled, icon, id, label, name, required } = this.props;\n    const { errors, isDirty, isFocused, isTyping, value } = this.state;\n    const isEmpty = !value;\n    const isErrored = !!errors.length && !isTyping && isDirty;\n    let color = 'inherit';\n    if (isErrored) color = colors?.error || COLORS.ERROR;\n    else if (isFocused) color = colors?.accent || COLORS.ACCENT;\n    return (\n      <label\n        className={cl({\n          [styles.isFocused]: isFocused,\n          [styles.isEmpty]: isEmpty,\n          [styles.isDisabled]: disabled,\n        })}\n        style={{ color }}\n        htmlFor={id}\n      >\n        <span style={{ flex: 1 }}>\n          {icon && <Icon id={icon} />} <Markdown inline text={label || name || ''} /> {required && <span>*</span>}\n        </span>\n        {Array.isArray(value) && !!value.length && <span>({value.length})</span>}\n      </label>\n    );\n  };\n\n  private renderCheckbox = (isErrored: boolean) => {\n    const { colors, id, label, name } = this.props;\n    let color = 'inherit';\n    if (isErrored) color = colors?.error || COLORS.ERROR;\n    return (\n      <div className={`${styles.checkbox}`} style={{ ...getBorderColor({ isErrored }), color, position: 'relative' }}>\n        {this.renderInput()}{' '}\n        <label htmlFor={id}>\n          <Markdown inline text={label || name || ''} />\n        </label>\n        {isErrored && this.renderStateIcon()}\n      </div>\n    );\n  };\n\n  public render = () => {\n    const { disabled, help, required, type, value } = this.props;\n    const { errors = [], isDirty, isTyping, isFocused } = this.state;\n    const isError = isDirty && !isTyping && (errors.length > 0 || (required && !value));\n    const hasIcon = isError || help;\n    const hasHint = hasIcon && isFocused;\n    if (type === 'check') return this.renderCheckbox(!!isError);\n    return (\n      <div\n        className={cl({\n          [styles.field]: true,\n          [styles.isErrored]: isError,\n          [styles.isDisabled]: disabled,\n        })}\n      >\n        {this.renderInput()}\n        {this.renderLabel()}\n        {hasIcon && this.renderStateIcon()}\n        {hasHint && <Hint<T, F> {...this.props} {...this.state} />}\n      </div>\n    );\n  };\n}\n\nexport default Field;\n","import _ from 'lodash';\nimport React, { createRef, Fragment, useEffect } from 'react';\nimport styles from './style/index.module.sass';\nimport { Field } from './Field';\nimport { TColors, TField, TForm } from './types';\nimport Colors from './Colors';\nimport cl from 'classnames';\nimport Markdown from './Markdown';\nimport { Component } from './Component';\nimport { clone } from './modules';\n\ntype State<T> = {\n  fields: TForm<T>['fields'];\n  validity: { [key: string]: boolean };\n  value: Partial<T>;\n};\n\nconst genId = (field: TField<any, any>) => field.name || 'noname';\n// const genId = () => Math.random().toString(36).slice(2);\n\nfunction parseFields<T>(_fields: TForm<T>['fields'], base: string): TForm<T>['fields'] {\n  const fields: typeof _fields = clone(_fields);\n  fields.forEach((field, i) => {\n    field.id = field.id || `${base}#${genId(field)}`;\n    const nextBase = field.length ? `${field.id}#${i}` : field.id || '';\n    if (field.fields) parseFields(field.fields, nextBase);\n  });\n  return fields;\n}\n\nexport class BasicForm<T> extends Component<TForm<T>, State<T>> {\n  private id: string = this.props.id || genId({ name: 'myformid' });\n\n  constructor(props: TForm<T>) {\n    super(props);\n    const fields = parseFields(props.fields, this.id);\n    this.state = {\n      fields,\n      validity: { something: false }, // Not valid by default, until first validation\n      value: props.value || {},\n    };\n    this.init(fields);\n  }\n\n  private init = (fields: TForm<T>['fields'], value: TForm<T>['value'] = this.props.value) => {\n    Promise.all(\n      fields.map(async (field) => {\n        const errors = field.name ? await validateField<any, any>(field, value?.[field.name], value) : [];\n        return errors.length > 0;\n      })\n    ).then((errors) => {\n      if (!this.isMounted) return;\n      const validity = {};\n      fields.forEach((field, i) => {\n        validity[field.name as string] = !errors[i];\n      });\n\n      // Hack to force Webkit autofill transition restart\n      // Disabled because this makes inputs rebuild, so they lose focus and other state\n      // this.setState({ fields: [] });\n\n      this.setState({ fields, validity, value: value || {} });\n      this.propagateOnChange();\n    });\n  };\n\n  private propagateOnChange = _.debounce(() => {\n    const isValid = !Object.values(this.state.validity).some((b) => !b);\n    this.props.onChange(this.state.value, isValid);\n  }, this.props.delay || 500);\n\n  private onChange<X>(field: TField<X, T>, value: X, isValid: boolean): void {\n    if (!field.name) return;\n    this.setState({\n      validity: { ...this.state.validity, [field.name]: isValid },\n      value: { ...this.state.value, [field.name]: value },\n    });\n    this.propagateOnChange();\n  }\n\n  public componentDidUpdate = (prevProps: TForm<T>) => {\n    const hasValueChanged = JSON.stringify(prevProps.value) !== JSON.stringify(this.props.value);\n    const hasFieldsChanged = JSON.stringify(prevProps.fields) !== JSON.stringify(this.props.fields);\n    if (hasValueChanged || hasFieldsChanged) {\n      const fields = hasFieldsChanged ? parseFields(this.props.fields, this.id) : this.state.fields;\n      this.init(fields);\n    }\n  };\n\n  public render = () => {\n    const { colors } = this.props;\n    const { fields, value } = this.state;\n    const fieldGroups = groupFields(fields);\n    return (\n      <div className={styles.formelio}>\n        <form id={this.id}>\n          {fieldGroups.map((group, i) => (\n            <div\n              key={i}\n              className={styles.group}\n              style={{\n                borderLeft: group.depth > 0 ? `solid 0.1em ${colors?.accent || Colors.ACCENT}20` : 'none',\n                marginLeft: `${group.depth > 0 ? 0.5 + (group.depth - 1) : 0}em`,\n                paddingLeft: `${group.depth > 0 ? 0.5 : 0}em`,\n              }}\n            >\n              {group.fields.map((field) => (\n                <Fragment key={`${group.depth}${field.name || field.label}${i}`}>\n                  <div\n                    className={cl({ [styles.fieldWrapper]: true })}\n                    style={{ flexBasis: (field.size || 1) * 100 + '%' }}\n                  >\n                    {!field.name && renderLabel(field, colors)}\n                    {field.name && getField<T>(field, value, this.onChange.bind(this), this.props.colors)}\n                  </div>\n                </Fragment>\n              ))}\n            </div>\n          ))}\n        </form>\n      </div>\n    );\n  };\n}\n\nconst groupFields = (fields: TField<any, any>[]) => {\n  type TGroup = { depth: number; fields: TField<any, any>[] };\n  const groups: Array<TGroup> = [];\n  let currentGroup: TGroup = { depth: 0, fields: [] };\n  fields.forEach((field) => {\n    if ((field.depth || 0) === currentGroup.depth) {\n      currentGroup.fields.push(field);\n    } else {\n      groups.push(currentGroup);\n      currentGroup = { depth: field.depth || 0, fields: [field] };\n    }\n  });\n  groups.push(currentGroup);\n  return groups;\n};\n\n// @TODO Don't use \"any\" here\nfunction getField<T>(field: any, value: any, onChange: any, colors?: TColors) {\n  switch (field.type) {\n    case 'date':\n      return <FieldWrapper<Date, T> {...{ colors, field, formValue: value, onChange }} />;\n    case 'number':\n      return <FieldWrapper<number, T> {...{ colors, field, formValue: value, onChange }} />;\n    case 'files':\n      return <FieldWrapper<File[], T> {...{ colors, field, formValue: value, onChange }} />;\n    case 'check':\n      return <FieldWrapper<boolean, T> {...{ colors, field, formValue: value, onChange }} />;\n    case 'tags':\n      return <FieldWrapper<string[], T> {...{ colors, field, formValue: value, onChange }} />;\n    default:\n      return <FieldWrapper<string, T> {...{ colors, field, formValue: value, onChange }} />;\n  }\n}\n\nconst renderLabel = (field: TField<any, any>, colors: TForm<any>['colors']) => {\n  return (\n    <Fragment>\n      {field.label && <label style={{ color: colors?.accent || Colors.ACCENT }}>{field.label}:</label>}\n      {field.help && (\n        <p style={{ fontSize: 'small' }}>\n          <Markdown text={field.help} inline />\n        </p>\n      )}\n    </Fragment>\n  );\n};\n\n/**\n * Intermediate component to let field handlers receive form data without passing\n * any form info to the Field class itself. This way <Field/> does not need to know about <Form/>\n */\nfunction FieldWrapper<T, F>(props: {\n  field: TField<T, F>;\n  formValue: Partial<F>;\n  onChange: (field: TField<T, F>, value: T, isValid: boolean) => void;\n  colors?: TColors;\n}) {\n  const ref = createRef<Field<T, F>>();\n  const onChange = (value: T, isValid: boolean) => props.onChange(props.field, value, isValid);\n  const validator = async (value?: T): Promise<string[]> => {\n    return validateField(props.field, value, props.formValue);\n  };\n  useEffect(() => {\n    ref.current?.validate();\n  }, [props.formValue]);\n  return (\n    <Field<T, F>\n      {...props.field}\n      colors={props.colors}\n      formValue={props.formValue}\n      ref={ref}\n      value={props.formValue[props.field.name as any] as any}\n      onChange={onChange}\n      validator={validator}\n    />\n  );\n}\n\nasync function validateField<T, F>(\n  field: TField<T, F>,\n  value: T | undefined,\n  formValue?: Partial<F>\n): Promise<string[]> {\n  if (field.required && !value) return ['Required field'];\n  if (!field.validator || !value) return [];\n  if (field.type === 'date' && typeof value === 'string') value = new Date(Date.parse(value)) as any as T;\n  return field.validator(value, formValue || {});\n}\n","import React, { Fragment } from 'react';\nimport { BasicForm } from './BasicForm';\nimport { Component } from './Component';\nimport { clone, flatten, unflatten } from './modules';\nimport { TField, TForm } from './types';\n\ntype State<T> = {\n  fields: TForm<T>['fields'];\n  isValid: boolean;\n  value: Partial<T> & { [key: string]: any };\n};\n\nexport class Form<T> extends Component<TForm<T>, State<T>> {\n  constructor(props: TForm<T>) {\n    super(props);\n    this.state = {\n      fields: getInconditionalFields<T>(props.fields),\n      isValid: false,\n      value: flatten(props.value || {}) as any,\n    };\n    cleanFields(props.fields, this.state.value).then((fields: any) => {\n      return this.isMounted && this.setState({ fields });\n    });\n  }\n\n  private onChange: TForm<T>['onChange'] = async (value, isValid) => {\n    const fields = await cleanFields(this.props.fields, value);\n    if (!this.isMounted) return;\n    value = cleanValue(value, fields);\n    this.setState({ fields, isValid, value });\n    this.props.onChange(unflatten(value), isValid);\n  };\n\n  public componentDidUpdate = (prevProps: TForm<T>) => {\n    if (prevProps.value !== this.props.value || prevProps.fields !== this.props.fields) {\n      const value = flatten(this.props.value || {}) as any;\n      cleanFields(this.props.fields, this.props.value).then(\n        (fields) => this.isMounted && this.setState({ fields, value })\n      );\n    }\n  };\n\n  public render = () => {\n    return (\n      <Fragment>\n        <BasicForm {...this.props} {...this.state} onChange={this.onChange} />\n      </Fragment>\n    );\n  };\n}\n\nfunction getInconditionalFields<T>(fields: TForm<T>['fields']): TForm<T>['fields'] {\n  return fields\n    .filter((f) => !f.when)\n    .map((f) => (f.fields ? { ...f, fields: getInconditionalFields<any>(f.fields) } : f));\n}\n\n// eslint-disable-next-line complexity\nasync function cleanFields<T>(\n  fields: any, // This cannot be just TForm<T>['fields'] because cleanFields() is called recursivelly\n  formValue: Partial<T> = {},\n  depth: number = 0\n): Promise<TForm<T>['fields']> {\n  let nextFields: TForm<T>['fields'] = [];\n\n  // eslint-disable-next-line complexity\n  const insertField = async (f: TField<any, any>) => {\n    let isPresent = false;\n    if (f.when) {\n      const promises = f.when.map((condition) => condition(unflatten(formValue) || {}));\n      const partials = await Promise.all(promises);\n      isPresent = partials.every((re) => !!re);\n    } else {\n      isPresent = true;\n    }\n    if (!isPresent) return;\n\n    if (f.validator) {\n      const validator = f.validator;\n      f.validator = (value: any, formValue: any) => {\n        return validator(value, unflatten(formValue));\n      };\n    }\n\n    if (!f.fields) {\n      nextFields.push(f as any);\n      return;\n    }\n\n    let subfields = await cleanFields(f.fields || [], formValue, (f.depth || 0) + 1);\n\n    if (f.length) {\n      const length = f.length(formValue || {});\n      for (let i = 0; i < length; i++) {\n        nextFields.push({\n          depth: f.depth || 0,\n          label: `${f.label || f.name} (${i + 1})`,\n        });\n        for (const sf of subfields) {\n          await insertField({\n            ...sf,\n            depth: (sf.depth || 0) - 1,\n            label: sf.label || sf.name,\n            name: sf.name && (`${f.name}.${i}.${sf.name}` as any),\n          });\n        }\n      }\n    } else {\n      nextFields.push({\n        depth: f.depth,\n        label: `${f.label || f.name}`,\n      });\n      for (const sf of subfields) {\n        await insertField({\n          ...sf,\n          depth: sf.depth || 0,\n          label: sf.label || sf.name,\n          name: sf.name && (`${f.name}.${sf.name}` as any),\n        });\n      }\n    }\n  };\n\n  for (const f of fields) {\n    await insertField({ ...f, depth });\n  }\n  return nextFields;\n}\n\nfunction cleanValue<T>(value: Partial<T>, fields: TForm<any>['fields']): Partial<T> {\n  const keys = fields.reduce((accum, f) => {\n    if (f.name) accum[f.name] = true;\n    return accum;\n  }, {} as { [key: string]: boolean });\n  const nextValue = clone<typeof value>(value);\n  Object.keys(nextValue).forEach((key) => {\n    if (!keys[key]) delete nextValue[key];\n  });\n  return nextValue;\n}\n","import React from 'react';\nimport { Form, TForm } from 'formelio';\n\nconst title = 'Basic form';\n\nconst description = `\nThis is a very simple use case: a login form. Take a look at how state changes when\nfields are modified. You'll notice that browser's *autofill* works out of the box.\n`;\n\ntype TValue = {\n  email: string;\n  password: string;\n  accept: boolean;\n};\n\ntype Props = {\n  value: TForm<TValue>['value'];\n  onChange: TForm<TValue>['onChange'];\n};\n\nconst Component = (props: Props) => {\n  const { value, onChange } = props;\n  return <Form<TValue> {...{ fields, onChange, value }} />;\n};\n\nconst initialState = {};\n\nconst fields: TForm<TValue>['fields'] = [\n  { name: 'email', required: true },\n  { name: 'password', required: true, type: 'password' },\n  { name: 'accept', required: true, type: 'check', label: 'I accept [whatever](https://google.com)' },\n];\n\nconst tileClass = 'is-light';\n\nexport default {\n  Component,\n  description,\n  source: { fields, initialState },\n  tileClass,\n  title,\n};\n","import React from 'react';\nimport { Form, TForm } from 'formelio';\n\nconst title = 'Fields size';\n\nconst description = `\nYou can *suggest* field sizes, using \\`size\\` property. If the screen is large\nenough to respect your suggestion, Formelio will do it. Otherwise it will ensure\nform is cool, even if you  suggest sizes just partially.\n`;\n\ntype TValue = {\n  name: string;\n  email: string;\n  surname1: string;\n  surname2: string;\n  birthday: Date;\n  phone: string;\n  accept: boolean;\n};\n\ntype Props = {\n  onChange: TForm<TValue>['onChange'];\n  value: TForm<TValue>['value'];\n};\n\nconst Component = (props: Props) => {\n  const { onChange, value } = props;\n  return <Form<TValue> {...{ fields, onChange, value }} />;\n};\n\nconst initialState = {};\n\nconst fields: TForm<TValue>['fields'] = [\n  {\n    name: 'name',\n    required: true,\n    size: 0.3,\n  },\n  {\n    name: 'surname1',\n    size: 0.3,\n  },\n  {\n    name: 'surname2',\n    size: 0.3,\n    help: 'Leave blank if you do not have a second surname',\n  },\n  {\n    icon: 'envelope',\n    name: 'email',\n  },\n  {\n    icon: 'calendar',\n    name: 'birthday',\n    type: 'date',\n    size: 0.5,\n  },\n  {\n    name: 'phone',\n    size: 0.5,\n  },\n  {\n    label: 'I accept whatever',\n    name: 'accept',\n    type: 'check',\n  },\n];\n\nconst tileClass = 'is-dark';\n\nexport default {\n  Component,\n  description,\n  source: { fields, initialState },\n  tileClass,\n  title,\n};\n","import React, { Fragment } from 'react';\nimport { Form, TForm } from 'formelio';\nimport cities from '../data/geo/municipios.json';\n\nconst title = 'Autocompletable dropdown';\n\nconst description = `\nThis example shows how to use dropdowns with autocomplete support.\nPerfect for huge lists of items, helping users to find the proper list item.\n`;\n\ntype TValue = {\n  city: string;\n  cities: string[];\n  domicilio: {\n    direccion: string;\n    provincia: string;\n    localidad: string;\n    codigoPostal: string;\n    other: { a: string; b: string };\n  };\n};\n\ntype Props = {\n  value: TForm<TValue>['value'];\n  onChange: TForm<TValue>['onChange'];\n};\n\nconst Component = (props: Props) => {\n  const { onChange, value } = props;\n  return (\n    <Fragment>\n      <Form<TValue> {...{ fields, onChange, value }} />\n    </Fragment>\n  );\n};\n\nconst initialState = {\n  cities: ['Catarroja', 'El Sotillo'],\n  city: 'El Sotillo',\n};\n\nconst found = {};\nconst citiesOptions = cities\n  .filter(({ name }) => {\n    const isFound = !found[name];\n    found[name] = true;\n    return isFound;\n  })\n  .slice(0, 10)\n  .map(({ name }) => ({ label: name, value: name }));\nconst fields: TForm<TValue>['fields'] = [\n  { name: 'city', options: citiesOptions },\n  { name: 'cities', options: citiesOptions, type: 'tags' },\n  {\n    help: 'This is a help message, shown only when there are exactly two cities selected',\n    when: [(formValue: Partial<TValue>) => formValue?.cities?.length === 2],\n  },\n  {\n    name: 'domicilio',\n    fields: [\n      { name: 'direccion', required: true },\n      { name: 'provincia', required: true, size: 0.3 },\n      { name: 'localidad', required: true, size: 0.3 },\n      { name: 'codigoPostal', required: true, size: 0.3 },\n      { name: 'other', fields: [{ name: 'a' }, { name: 'b' }] },\n    ],\n  },\n];\n\nconst tileClass = 'is-info';\n\nexport default {\n  Component,\n  description,\n  source: { fields, initialState },\n  tileClass,\n  title,\n};\n","import React, { Fragment } from 'react';\nimport { Form, TForm } from 'formelio';\n\nconst title = 'Dynamic form';\n\nconst description = `\nSometimes you want to show a field more than once, but you don't know how many times because\nit depends on user input. This kind of dynamic forms are perfect for \\`Formelio\\`.\n`;\n\ntype TValue = {\n  childrenCount: number;\n  children: Array<{ name: string; birthdate: Date }>;\n};\n\ntype Props = {\n  value: TForm<TValue>['value'];\n  onChange: TForm<TValue>['onChange'];\n};\n\nconst Component = (props: Props) => {\n  const { onChange, value } = props;\n  return (\n    <Fragment>\n      <Form<TValue> {...{ fields, onChange, value }} />\n    </Fragment>\n  );\n};\n\nconst initialState = {\n  childrenCount: 2,\n  children: [\n    {\n      name: 'Sam',\n      birthdate: '2001-02-12',\n    },\n    {\n      name: 'Karen',\n      birthdate: '1995-01-03',\n    },\n  ],\n};\n\nconst fields: TForm<TValue>['fields'] = [\n  {\n    name: 'childrenCount',\n    type: 'number',\n  },\n  {\n    name: 'children',\n    length: (formValue: Partial<TValue>) => formValue.childrenCount || 0,\n    fields: [\n      { name: 'name', size: 0.5 },\n      { name: 'birthdate', type: 'date', size: 0.5 },\n    ],\n  },\n];\n\nconst tileClass = 'is-light';\n\nexport default {\n  Component,\n  description,\n  source: { fields, initialState },\n  tileClass,\n  title,\n};\n","import React from 'react';\nimport ReactMarkdownWithHtml from 'react-markdown/with-html';\n\nconst LinkRenderer = (props: any) => (\n  <a href={props.href} target=\"_blank\" rel=\"noopener noreferrer\">\n    {props.children}\n  </a>\n);\n\nconst Markdown = (props: { text: string; inline?: boolean }) => (\n  <ReactMarkdownWithHtml\n    disallowedTypes={props.inline ? ['paragraph'] : []}\n    allowDangerousHtml\n    unwrapDisallowed\n    renderers={{ link: LinkRenderer }}\n  >\n    {props.text}\n  </ReactMarkdownWithHtml>\n);\n\nexport default Markdown;\n","import React, { useState } from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { dark, github } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport 'formelio/dist/index.css';\nimport { TForm } from 'formelio';\nimport stringify from 'json-stringify-pretty-compact';\n// import cl from 'classnames';\n\nimport Login from './Login';\nimport Basic from './Basic';\nimport Other from './Other';\nimport Dynamic from './Dynamic';\nimport Markdown from '../Markdown';\n\nconst EXAMPLES = [Login, Dynamic, Basic, Other, Dynamic];\n\nconst Examples = () => {\n  return (\n    <div>\n      {EXAMPLES.map((props, i) => (\n        <Example key={i} theme={i % 0 ? 'is-dark' : 'is-light'} {...props} />\n      ))}\n    </div>\n  );\n};\n\nconst Example = (props: any) => {\n  const [isValid, setIsValid] = useState(false);\n  const [value, setValue] = useState(props.source.initialState);\n  const [theme] = useState(props.tileClass || 'is-light');\n\n  const onChange: TForm<any>['onChange'] = async (value, isValid) => {\n    setValue(value);\n    setIsValid(isValid);\n  };\n\n  return (\n    <div className=\"content\" style={{ marginBottom: '5em' }}>\n      {props.title && (\n        <h4>\n          <Markdown inline text={props.title} />\n        </h4>\n      )}\n      {props.description && <Markdown text={props.description} />}\n      <div className=\"columns\">\n        <div className=\"column\" style={{ display: 'flex', overflow: 'auto' }}>\n          <div className={`notification ${theme} is-light`} style={{ flex: 1 }}>\n            <div style={{ minHeight: '100%', display: 'flex', flexDirection: 'column' }}>\n              <div style={{ flex: 1 }}>\n                {/* <div className=\"tabs is-centered\">\n                  <ul style={{ margin: 0 }}>\n                    {['light', 'dark'].map((the) => (\n                      <li key={the} className={cl({ 'is-active': theme === `is-${the}` })}>\n                        <a style={{ textDecoration: 'none' }} onClick={() => setTheme(`is-${the}`)}>\n                          {the}\n                        </a>\n                      </li>\n                    ))}\n                  </ul>\n                </div> */}\n                <props.Component onChange={onChange} value={value} />\n              </div>\n              <div style={{ overflow: 'auto', marginTop: '2em' }}>\n                <SyntaxHighlighter language=\"javascript\" style={theme === 'is-dark' ? dark : github}>\n                  {'// State\\n\\n' + stringify({ isValid, value }, { indent: 2, maxLength: 50 })}\n                </SyntaxHighlighter>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"column\" style={{ overflow: 'auto', display: 'flex' }}>\n          <SyntaxHighlighter language=\"javascript\" style={{ ...github, flex: 1 }}>\n            {`// Source code\\n\\n` + genSource(props.source)}\n          </SyntaxHighlighter>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst genSource = ({ fields, initialState }: typeof Basic.source) =>\n  `\nimport React, { useState } from 'react';\nimport { Form } from 'formelio';\n\nconst MyForm = () => {\n  const [isValid, setIsValid] = useState(false);\n  const [value, setValue] = useState(${indent(stringify(initialState, { indent: 2, maxLength: 50 }), 2).trim()});\n  const onChange = (value, isValid) => {\n    setValue(value);\n    setIsValid(isValid);\n  };\n  const fields = ${indent(stringify(fields, { indent: 2, maxLength: 80 }), 2).trim()};\n  return (\n    <Form {...{fields, value, onChange}} />\n  );\n}`.trim();\n\nconst indent = (code: string, level: number) =>\n  code\n    .split('\\n')\n    .map((l) => `${' '.repeat(level)}${l}`)\n    .join('\\n')\n    .trimEnd();\n\nexport default Examples;\n","import React from 'react';\nimport Examples from './Examples';\n// eslint-disable-next-line import/no-webpack-loader-syntax\n// import { default as Features } from '!!raw-loader!./Features.md';\n// eslint-disable-next-line import/no-webpack-loader-syntax\n// import { default as Definitions } from '!!raw-loader!./Definitions.md';\nimport 'formelio/dist/index.css';\n// import Markdown from './Markdown';\n\nconst App = () => {\n  return (\n    <div className=\"container\">\n      {/* <section className=\"content\">\n        <Markdown text={Features} />\n      </section>\n      <section className=\"content\">\n        <Markdown text={Definitions} />\n      </section> */}\n      <section className=\"content\">\n        <h2>Formelio by example</h2>\n        <p>The best way to learn is by example, so here are some cool use cases to see how to use <a href=\"https://github.com/sgmonda/formelio/\">Formelio</a>.</p>\n        <Examples />\n      </section>\n    </div>\n  );\n};\n\nexport default App;\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}