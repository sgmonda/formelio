{"version":3,"sources":["../../node_modules/classnames/index.js","../../src/Colors.tsx","../../src/Input/Select.tsx","../../src/modules/flatten.ts","../../src/modules/getBorderColor.ts","../../src/modules/unflatten.ts","../../src/Input/index.tsx","../../src/Input/Date.tsx","../../src/Input/File.tsx","../../src/Input/Checkbox.tsx","../../src/Input/TextArea.tsx","../../src/Input/Input.tsx","../../src/Icon.tsx","../../src/Markdown.tsx","../../src/Field/Hint.tsx","../../src/Field/index.tsx","../../src/BasicForm.tsx","../../src/DynamicForm.tsx","Examples/Login.tsx","Examples/Basic.tsx","Examples/Other.tsx","Examples/Dynamic.tsx","Markdown.tsx","Examples/index.tsx","App.tsx","index.tsx"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","window","getSelect","isMulti","Select","props","customStyles","control","background","borderBottom","borderColor","cursor","display","paddingTop","transition","indicatorSeparator","indicatorsContainer","input","provided","color","marginTop","width","multiValue","border","COLORS","marginBottom","marginRight","multiValueLabel","multiValueRemove","opacity","option","state","padding","placeholder","singleValue","overflow","position","textOverflow","whiteSpace","valueContainer","alignItems","margin","options","label","value","name","menuPlacement","styles","isDisabled","disabled","onFocus","onBlur","onChange","item","values","it","v","Tags","isPrimitiveType","flatten","object","accum","partial","getBorderColor","isFocused","colors","unflatten","parts","test","setValue","type","inputProps","React","DatePickerWrapperStyles","createGlobalStyle","className","datepicker","selected","Date","undefined","date","onCalendarClose","dateFormat","format","wrapperClassName","popperPlacement","ref","createRef","ref2","onCancel","document","required","max","min","autoComplete","style","multiple","accept","ev","files","autocomplete","cl","hasHint","f","readOnly","File","id","isChecked","checked","Checkbox","TextArea","parseFloat","Input","library","Icon","icon","fontSize","paddingBottom","LinkRenderer","href","target","rel","Markdown","disallowedTypes","allowDangerousHtml","unwrapDisallowed","renderers","link","Hint","isTyping","isError","errors","refTarget","refPopper","useEffect","createPopper","placement","backgroundColor","message","text","inline","Field","constructor","typingTimeout","getStateAndValidate","validate","componentDidUpdate","prevProps","Number","newState","isDirty","componentWillUnmount","clearTimeout","a","setTimeout","validator","renderStateIcon","renderInput","help","isErrored","renderLabel","isEmpty","flex","renderCheckbox","htmlFor","render","hasIcon","Component","BasicForm","init","fields","Promise","field","validateField","validity","propagateOnChange","isValid","b","fieldGroups","groupFields","marginLeft","group","depth","flexBasis","formValue","getField","something","this","groups","currentGroup","Colors","FieldWrapper","DynamicForm","cleanFields","cleanValue","console","nextFields","insertField","isPresent","promises","condition","partials","re","subfields","sf","keys","nextValue","clone","description","source","initialState","tileClass","title","size","found","citiesOptions","cities","filter","isFound","slice","map","childrenCount","children","birthdate","EXAMPLES","Login","Dynamic","Basic","city","Example","useState","setIsValid","theme","minHeight","flexDirection","language","dark","github","stringify","indent","maxLength","genSource","trim","code","level","split","l","repeat","trimEnd","Examples","App","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.b6dbe01f.chunk.js","sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","export default {\n  ACCENT: '#5196D5',\n  ERROR: '#D65947',\n};\n","import React from 'react';\nimport RSelect, { StylesConfig } from 'react-select';\nimport { TInputProps } from '../types';\nimport COLORS from '../Colors';\n\nfunction getSelect<T>(isMulti: boolean = false) {\n  const Select = (props: TInputProps<T>) => {\n    const customStyles: StylesConfig<any, any, any> = {\n      control: () => ({\n        background: 'none !important',\n        borderBottom: `solid 0.13em`,\n        borderColor: props.borderColor,\n        cursor: 'text',\n        display: 'flex',\n        paddingTop: isMulti ? '1.2em' : '0',\n        transition: '0.2s ease-in-out',\n      }),\n      indicatorSeparator: () => ({ display: 'none' }),\n      indicatorsContainer: () => ({ display: 'none' }),\n      input: (provided: any) => ({\n        ...provided,\n        color: 'inherit',\n        marginTop: isMulti ? '-1em' : '0.2em',\n        width: '5em',\n      }),\n      multiValue: () => ({\n        border: `solid 1px ${props.colors?.accent || COLORS.ACCENT}`,\n        display: 'flex',\n        marginBottom: '0.2em',\n        marginRight: '0.2em',\n      }),\n      multiValueLabel: (provided: any) => ({\n        ...provided,\n        color: 'inherit',\n      }),\n      multiValueRemove: (provided: any) => ({\n        ...provided,\n        '&:hover': {\n          background: 'none',\n          cursor: 'pointer',\n          opacity: 1,\n        },\n        color: 'inherit !important',\n        opacity: 0.5,\n      }),\n      option: (_: any, state) => ({\n        background: state.isSelected\n          ? props.colors?.accent || COLORS.ACCENT\n          : state.isFocused\n          ? (props.colors?.accent || COLORS.ACCENT) + '1F'\n          : 'white',\n        color: state.isSelected ? 'white' : '#555',\n        padding: '0.25em 0.5em',\n      }),\n      placeholder: () => ({ display: 'none' }),\n      singleValue: () => ({\n        color: props.isErrored ? props.colors?.error || COLORS.ERROR : 'inherit',\n        overflow: 'hidden',\n        position: 'absolute',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        width: '100%',\n      }),\n      valueContainer: (provided: any) => ({\n        ...provided,\n        alignItems: isMulti ? 'start' : 'flex-end',\n        margin: '0',\n        marginTop: '0.3em',\n        padding: '0',\n      }),\n    };\n    const onChange = (item: any) => {\n      if (isMulti) {\n        const values = {};\n        [...(item.map((it: any) => it.value) as any)].forEach((v) => (values[v] = true));\n        props.onChange(Object.keys(values) as any);\n      } else {\n        props.onChange(item && item.value);\n      }\n    };\n    const options = props.options?.map(({ value, label }) => ({ label: label || value, value }));\n    const value = options?.filter((option) =>\n      Array.isArray(props.value) ? props.value.includes(option.value) : option.value === props.value\n    );\n    return (\n      <RSelect\n        name={props.name}\n        menuPlacement=\"bottom\"\n        options={options}\n        styles={customStyles}\n        isMulti={isMulti}\n        isDisabled={props.disabled}\n        onFocus={props.onFocus}\n        onBlur={props.onBlur}\n        onChange={onChange}\n        value={value}\n      />\n    );\n  };\n  return Select;\n}\n\nexport const Tags = getSelect<string[]>(true);\n\nexport const Select = getSelect<string>();\n","const isPrimitiveType = (value: any) => {\n  return value !== Object(value);\n};\n\nexport const flatten = (object: Object): { [key: string]: any } => {\n  if (object === null || object === undefined) return {};\n  const result: { [key: string]: any } = {};\n  return Object.entries(object).reduce((accum, [key, value]) => {\n    if (value instanceof Date) accum[key] = value.toISOString();\n    else if (typeof value !== 'object' || value instanceof File) accum[key] = value;\n    else if (Array.isArray(value) && value.every(isPrimitiveType)) accum[key] = value;\n    else {\n      const partial = flatten(value);\n      Object.entries(partial).forEach(([k, v]) => {\n        partial[`${key}.${k}`] = v;\n        delete partial[k];\n      });\n      accum = { ...accum, ...partial };\n    }\n    return accum;\n  }, result);\n};\n","import { TInputProps } from '../types';\nimport COLORS from '../Colors';\n\nexport const getBorderColor = (props: Partial<TInputProps<any>>) => {\n  const { colors, isErrored, isFocused } = props;\n  let borderColor = 'inherit';\n  if (isErrored) borderColor = colors?.error || COLORS.ERROR;\n  else if (isFocused) borderColor = colors?.accent || COLORS.ACCENT;\n  return { borderColor };\n};\n","function setValue(object: { [key: string]: any }, key: string, value: any): void {\n  const parts = key.split('.');\n  if (parts.length === 1) {\n    object[parts[0]] = value;\n    return;\n  }\n  object[parts[0]] = object[parts[0]] || (/^\\d+$/.test(parts[1]) ? [] : {});\n  return setValue(object[parts[0]], parts.slice(1).join('.'), value);\n}\nexport function unflatten<T>(object: { [key: string]: any }): T {\n  const accum: { [key: string]: any } = {};\n  const obj = Object.entries(object).reduce((accum, [key, value]) => {\n    if (!key.includes('.')) {\n      accum[key] = value;\n    } else {\n      const parts = key.split('.');\n      accum[parts[0]] = accum[parts[0]] || (/^\\d+$/.test(parts[1]) ? [] : {});\n      setValue(accum[parts[0]], parts.slice(1).join('.'), value);\n    }\n    return accum;\n  }, accum);\n  return obj as T;\n}\n","import { TInputProps } from '../types';\nimport { Select, Tags } from './Select';\nimport File from './File';\nimport Date from './Date';\nimport Checkbox from './Checkbox';\nimport Input from './Input';\nimport TextArea from './TextArea';\nimport React from 'react';\nimport { getBorderColor } from '../modules';\n\nexport default (props: TInputProps<any>) => {\n  const { options, type } = props;\n  const inputProps = { ...props, ...getBorderColor(props) };\n  if (options) {\n    if (type === 'tags') return <Tags {...inputProps} />;\n    return <Select {...inputProps} />;\n  }\n  if (type === 'date') return Date(inputProps);\n  if (type === 'files') return File(inputProps);\n  if (type === 'check') return Checkbox(inputProps);\n  if (type === 'text-multiline') return TextArea(inputProps);\n  return Input(inputProps);\n};\n","import React from 'react';\nimport DatePicker from 'react-datepicker';\nimport './Date.module.css';\nimport styles from '../styles.module.css';\nimport { createGlobalStyle } from 'styled-components';\nimport { TInputProps } from '../types';\n\nconst DateInput = (props: TInputProps<Date>) => {\n  const DatePickerWrapperStyles = createGlobalStyle`\n    .date_picker {\n      width: 100%\n    }\n    .date_picker input {\n      color: inherit;\n      border-color: ${props.borderColor};\n    }\n  `;\n  const onChange = (date: Date) => {\n    props.onChange(date);\n    // props.onBlur();\n  };\n  return (\n    <div className={styles.datepicker}>\n      <DatePicker\n        selected={props.value ? new Date(props.value) : undefined}\n        onChange={onChange}\n        onFocus={props.onFocus}\n        onCalendarClose={props.onBlur}\n        onBlur={props.onBlur}\n        dateFormat={props.format}\n        wrapperClassName={'date_picker'}\n        popperPlacement=\"bottom-start\"\n      />\n      <DatePickerWrapperStyles />\n    </div>\n  );\n};\n\nexport default DateInput;\n","import React, { ChangeEventHandler, createRef, FocusEventHandler, Fragment } from 'react';\nimport cl from 'classnames';\nimport { TInputProps } from '../types';\nimport styles from '../styles.module.css';\n\nconst FileInput = (props: TInputProps<File[]>) => {\n  const ref = createRef<HTMLInputElement>();\n  const ref2 = createRef<HTMLInputElement>();\n  const onFocus: FocusEventHandler<HTMLInputElement> = () => {\n    ref2.current?.blur();\n    ref.current?.click();\n    props.onFocus();\n    document.body.onfocus = onCancel;\n  };\n  const onChange: ChangeEventHandler<any> = (ev) => {\n    const files = ev.target.files;\n    props.onChange([...files]);\n  };\n  const onCancel = () => {\n    props.onBlur();\n    document.body.onfocus = null;\n  };\n  return (\n    <Fragment>\n      <input\n        required={props.required}\n        disabled={props.disabled}\n        max={props.max}\n        min={props.min}\n        name={props.name}\n        autoComplete={undefined}\n        value=\"\"\n        ref={ref}\n        style={{ display: 'none' }}\n        type=\"file\"\n        multiple={true}\n        accept={props.extensions?.join(',') || undefined}\n        onChange={onChange}\n        onBlur={onCancel}\n      />\n      <input\n        autoComplete={props.autocomplete}\n        className={cl({\n          [styles.isErrored]: props.isErrored,\n          [styles.hasHint]: props.hasHint,\n        })}\n        style={{ borderColor: props.borderColor, color: 'inherit' }}\n        value={props.value ? props.value.map((f: File) => `\"${f.name}\"`).join(', ') : undefined}\n        ref={ref2}\n        onFocus={onFocus}\n        readOnly={true}\n      />\n    </Fragment>\n  );\n};\n\nexport default FileInput;\n","import React, { ChangeEventHandler } from 'react';\nimport { TInputProps } from '../types';\n\nconst CheckboxInput = (props: TInputProps<boolean>) => {\n  const onChange: ChangeEventHandler<any> = (ev) => {\n    const isChecked = !!ev.target.checked;\n    props.onChange(isChecked);\n  };\n\n  return (\n    <input\n      required={props.required}\n      disabled={props.disabled}\n      max={props.max}\n      min={props.min}\n      name={props.name}\n      id={props.name}\n      autoComplete={props.autocomplete}\n      type=\"checkbox\"\n      // defaultValue={props.value as any}\n      onChange={onChange}\n      checked={!!props.value}\n      value={''}\n    />\n  );\n};\n\nexport default CheckboxInput;\n","import React from 'react';\nimport cl from 'classnames';\nimport { TInputProps } from '../types';\nimport styles from '../styles.module.css';\n\nconst TextArea = (props: TInputProps<string>) => {\n  return (\n    <textarea\n      required={props.required}\n      disabled={props.disabled}\n      name={props.name}\n      className={cl({\n        [styles.isErrored]: props.isErrored,\n        [styles.hasHint]: props.hasHint,\n      })}\n      style={{ borderColor: props.borderColor, color: 'inherit' }}\n      autoComplete={props.autocomplete}\n      value={props.value || ''}\n      onFocus={props.onFocus}\n      onBlur={props.onBlur}\n      onChange={(ev) => props.onChange(ev.target.value)}\n    ></textarea>\n  );\n};\n\nexport default TextArea;\n","import React, { ChangeEventHandler } from 'react';\nimport cl from 'classnames';\nimport { TInputProps } from '../types';\nimport styles from '../styles.module.css';\nimport COLORS from '../Colors';\n\nconst CommonInput = (props: TInputProps<string>) => {\n  const { colors } = props;\n  let color = 'inherit';\n  if (props.isErrored) color = colors?.error || COLORS.ERROR;\n\n  const onChange: ChangeEventHandler<any> = (ev) => {\n    let value = ev.target.value;\n    if (props.type === 'number') value = parseFloat(value);\n    props.onChange(value);\n  };\n\n  return (\n    <input\n      required={props.required}\n      disabled={props.disabled}\n      max={props.max}\n      min={props.min}\n      name={props.name}\n      className={cl({\n        [styles.isErrored]: props.isErrored,\n        [styles.hasHint]: props.hasHint,\n      })}\n      style={{ borderColor: props.borderColor, color }}\n      autoComplete={props.autocomplete}\n      type={props.type || 'text'}\n      value={props.value || ''}\n      onFocus={props.onFocus}\n      onBlur={props.onBlur}\n      onChange={onChange}\n    />\n  );\n};\n\nexport default CommonInput;\n","/**\n * Font awesome wrapper\n * Search icons in https://fontawesome.com/icons\n */\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\n\nlibrary.add(fas);\n\nconst Icon = (props: { id: string }) => (\n  <FontAwesomeIcon icon={props.id as any} style={{ color: 'inherit', fontSize: 'small', paddingBottom: '0.1em' }} />\n);\n\nexport default Icon;\n","import React from 'react';\nimport ReactMarkdownWithHtml from 'react-markdown/with-html';\n\nconst LinkRenderer = (props: any) => (\n  <a href={props.href} target=\"_blank\" rel=\"noopener noreferrer\">\n    {props.children}\n  </a>\n);\n\nconst Markdown = (props: { text: string; inline?: boolean }) => (\n  <ReactMarkdownWithHtml\n    disallowedTypes={props.inline ? ['paragraph'] : []}\n    allowDangerousHtml\n    unwrapDisallowed\n    renderers={{ link: LinkRenderer }}\n  >\n    {props.text}\n  </ReactMarkdownWithHtml>\n);\n\nexport default Markdown;\n","import React, { createRef, Fragment, useEffect } from 'react';\nimport { createPopper } from '@popperjs/core';\nimport styles from '../../style/index.module.sass';\nimport { TFieldProps, TFieldState } from '../types';\nimport COLORS from '../Colors';\nimport Markdown from '../Markdown';\n\nfunction Hint<T, F>(props: TFieldProps<T, F> & TFieldState<T>) {\n  const { colors, errors, help, isDirty, isFocused, isTyping } = props;\n  const isError = !!errors.length && !isTyping && isDirty;\n\n  const refTarget = createRef<HTMLDivElement>();\n  const refPopper = createRef<HTMLDivElement>();\n\n  useEffect(() => {\n    if (refTarget.current && refPopper.current) {\n      createPopper(refTarget.current, refPopper.current, { placement: 'top-start' });\n    }\n  }, []);\n\n  let backgroundColor = undefined;\n  if (isError) backgroundColor = colors?.error || COLORS.ERROR;\n  else if (isFocused) backgroundColor = colors?.accent || COLORS.ACCENT;\n  const message = isError ? errors.join('\\n\\n') : help;\n\n  return (\n    <Fragment>\n      <div className={styles.hintTarget} ref={refTarget} />\n      <div className={styles.hint} ref={refPopper} style={{ backgroundColor }}>\n        <Markdown text={isFocused ? message || '' : ''} inline />\n        <div className={styles.arrow} data-popper-arrow></div>\n        {/* <div className={styles.spike} style={{ borderTopColor: backgroundColor }} /> */}\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Hint;\n","import React, { Component } from 'react';\nimport styles from '../../style/index.module.sass';\nimport { TFieldProps, TFieldState } from '../types';\nimport cl from 'classnames';\nimport Input from '../Input';\nimport Icon from '../Icon';\nimport COLORS from '../Colors';\nimport Hint from './Hint';\nimport { getBorderColor } from '../modules';\nimport Markdown from '../Markdown';\n\nconst ERROR_HIDE_DELAY = 1000;\n\ntype Props<T, F> = TFieldProps<T, F>;\ntype State<T> = TFieldState<T>;\n\nexport class Field<T, F> extends Component<Props<T, F>, State<T>> {\n  static initialState = { errors: [], isDirty: false, isFocused: false, isTyping: false, value: undefined };\n  private typingTimeout: NodeJS.Timeout | undefined = undefined;\n\n  constructor(props: Props<T, F>) {\n    super(props);\n    this.state = this.getStateAndValidate(props);\n  }\n\n  private getStateAndValidate = (props: Props<T, F>): State<T> => {\n    const state = {\n      ...Field.initialState,\n      value: props.value,\n    };\n    this.validate(props);\n    return state;\n  };\n\n  public validate = (props: Props<T, F> = this.props) => {\n    props.validator(props.value as T).then((errors) => this.setState({ errors: errors || [] }));\n  };\n\n  public componentDidUpdate = (prevProps: Props<T, F>) => {\n    if (prevProps.value !== this.state.value && !(Number.isNaN(prevProps.value) && Number.isNaN(this.state.value))) {\n      const newState = {\n        ...this.getStateAndValidate(this.props),\n        isDirty: this.state.isDirty,\n        isFocused: this.state.isFocused,\n        isTyping: this.state.isTyping,\n      };\n      this.setState(newState);\n    }\n    const shouldReset = Object.keys(prevProps.formValue).length && !Object.keys(this.props.formValue).length;\n    if (shouldReset) {\n      this.setState({ isDirty: false });\n    }\n  };\n\n  public componentWillUnmount = () => {\n    clearTimeout(this.typingTimeout as any);\n  };\n\n  private onChange = async (value: T) => {\n    // Do not show errors while typing\n    clearTimeout(this.typingTimeout as any);\n    this.typingTimeout = setTimeout(() => {\n      this.setState({ isTyping: false });\n    }, ERROR_HIDE_DELAY);\n\n    const { validator } = this.props;\n    const errors = (await validator(value)) || [];\n    this.setState({ errors, isDirty: true, isTyping: true, value });\n    this.props.onChange(value, !errors.length);\n  };\n\n  private renderStateIcon = () => {\n    const { colors } = this.props;\n    const { errors, isDirty, isFocused, isTyping } = this.state;\n    const isError = !!errors.length && !isTyping && isDirty;\n    let color = 'inherit' || undefined;\n    if (isError) color = colors?.error || COLORS.ERROR;\n    else if (isFocused) color = colors?.accent || COLORS.ACCENT;\n    return (\n      <div\n        className={cl({\n          [styles.icon]: true,\n          [styles.isFocused]: isFocused,\n          [styles.isErrored]: isError,\n        })}\n        style={{ color }}\n      >\n        <Icon id={isError ? 'exclamation-triangle' : 'question-circle'} />\n      </div>\n    );\n  };\n\n  private renderInput = () => {\n    const { help } = this.props;\n    const { errors, isDirty, isFocused, isTyping, value } = this.state;\n    const isError = !!errors.length && !isTyping && isDirty;\n    return (\n      <Input\n        {...this.props}\n        hasHint={isError || !!help}\n        isErrored={isError}\n        isFocused={isFocused}\n        value={value}\n        onChange={this.onChange}\n        onFocus={() => this.setState({ isFocused: true })}\n        onBlur={() => this.setState({ isFocused: false })}\n      />\n    );\n  };\n\n  // eslint-disable-next-line complexity\n  private renderLabel = () => {\n    const { colors, disabled, icon, label, name, required } = this.props;\n    const { errors, isDirty, isFocused, isTyping, value } = this.state;\n    const isEmpty = !value;\n    const isErrored = !!errors.length && !isTyping && isDirty;\n    let color = 'inherit';\n    if (isErrored) color = colors?.error || COLORS.ERROR;\n    else if (isFocused) color = colors?.accent || COLORS.ACCENT;\n    return (\n      <label\n        className={cl({\n          [styles.isFocused]: isFocused,\n          [styles.isEmpty]: isEmpty,\n          [styles.isDisabled]: disabled,\n        })}\n        style={{ color }}\n      >\n        <span style={{ flex: 1 }}>\n          {icon && <Icon id={icon} />} <Markdown inline text={label || name || ''} /> {required && <span>*</span>}\n        </span>\n        {Array.isArray(value) && !!value.length && <span>({value.length})</span>}\n      </label>\n    );\n  };\n\n  private renderCheckbox = (isErrored: boolean) => {\n    const { colors, label, name } = this.props;\n    let color = 'inherit';\n    if (isErrored) color = colors?.error || COLORS.ERROR;\n    return (\n      <div className={`${styles.checkbox}`} style={{ ...getBorderColor({ isErrored }), color }}>\n        {this.renderInput()}{' '}\n        <label htmlFor={name}>\n          <Markdown inline text={label || name || ''} />\n        </label>\n      </div>\n    );\n  };\n\n  public render = () => {\n    const { disabled, help, required, type, value } = this.props;\n    const { errors = [], isDirty, isTyping, isFocused } = this.state;\n    const isError = isDirty && !isTyping && (errors.length > 0 || (required && !value));\n    const hasIcon = isError || help;\n    const hasHint = hasIcon && isFocused;\n    if (type === 'check') return this.renderCheckbox(!!isError);\n    return (\n      <div\n        className={cl({\n          [styles.field]: true,\n          [styles.isErrored]: isError,\n          [styles.isDisabled]: disabled,\n        })}\n      >\n        {this.renderInput()}\n        {this.renderLabel()}\n        {hasIcon && this.renderStateIcon()}\n        {hasHint && <Hint<T, F> {...this.props} {...this.state} />}\n      </div>\n    );\n  };\n}\n","import _ from 'lodash';\nimport React, { Component, createRef, Fragment, useEffect } from 'react';\nimport styles from '../style/index.module.sass';\nimport { Field } from './Field';\nimport { TColors, TField, TForm } from './types';\nimport Colors from './Colors';\nimport cl from 'classnames';\nimport Markdown from './Markdown';\n\ntype State<T> = {\n  fields: TForm<T>['fields'];\n  validity: { [key: string]: boolean };\n  value: Partial<T>;\n};\n\nexport class BasicForm<T> extends Component<TForm<T>, State<T>> {\n  constructor(props: TForm<T>) {\n    super(props);\n    this.state = {\n      fields: [],\n      validity: { something: false }, // Not valid by default, until first validation\n      value: this.props.value || {},\n    };\n    this.init();\n  }\n\n  private init = (fields: TForm<T>['fields'] = this.props.fields, value: TForm<T>['value'] = this.props.value) => {\n    Promise.all(\n      fields.map(async (field) => {\n        const errors = field.name ? await validateField<any, any>(field, value?.[field.name], value) : [];\n        return errors.length > 0;\n      })\n    ).then((errors) => {\n      const validity = {};\n      fields.forEach((field, i) => {\n        validity[field.name as string] = !errors[i];\n      });\n      // Hack to force Webkit autofill transition restart\n      // Disabled because this makes inputs rebuild, so they lose focus and other state\n      // this.setState({ fields: [] });\n      this.setState({ fields, validity, value: value || {} });\n    });\n  };\n\n  private propagateOnChange = _.debounce(() => {\n    const isValid = !Object.values(this.state.validity).some((b) => !b);\n    this.props.onChange(this.state.value, isValid);\n  }, this.props.delay || 500);\n\n  private onChange<X>(field: TField<X, T>, value: X, isValid: boolean): void {\n    if (!field.name) return;\n    this.setState({\n      validity: { ...this.state.validity, [field.name]: isValid },\n      value: { ...this.state.value, [field.name]: value },\n    });\n    this.propagateOnChange();\n  }\n\n  public componentDidUpdate = (prevProps: TForm<T>) => {\n    if (prevProps.value !== this.props.value || prevProps.fields !== this.props.fields) {\n      this.init();\n    }\n  };\n\n  public render = () => {\n    const { colors } = this.props;\n    const { fields, value } = this.state;\n    const fieldGroups = groupFields(fields);\n    return (\n      <div className={styles.formelio}>\n        <form>\n          {fieldGroups.map((group, i) => (\n            <div\n              key={i}\n              className={styles.group}\n              style={{\n                // borderLeft: group.depth > 0 ? `solid 1px rgba(0, 0, 0, ${group.depth * 0.1})` : 'none',\n                marginLeft: `${group.depth}em`,\n              }}\n            >\n              {group.fields.map((field) => (\n                <Fragment key={`${group.depth}${field.name || field.label}${i}`}>\n                  <div\n                    className={cl({ [styles.fieldWrapper]: true, [styles.label]: !field.name })}\n                    style={{ flexBasis: (field.size || 1) * 100 + '%' }}\n                  >\n                    {!field.name && renderLabel(field, colors)}\n                    {field.name && getField<T>(field, value, this.onChange.bind(this), this.props.colors)}\n                  </div>\n                </Fragment>\n              ))}\n            </div>\n          ))}\n        </form>\n      </div>\n    );\n  };\n}\n\nconst groupFields = (fields: TField<any, any>[]) => {\n  type TGroup = { depth: number; fields: TField<any, any>[] };\n  const groups: Array<TGroup> = [];\n  let currentGroup: TGroup = { depth: 0, fields: [] };\n  fields.forEach((field) => {\n    if ((field.depth || 0) === currentGroup.depth) {\n      currentGroup.fields.push(field);\n    } else {\n      groups.push(currentGroup);\n      currentGroup = { depth: field.depth || 0, fields: [field] };\n    }\n  });\n  groups.push(currentGroup);\n  return groups;\n};\n\n// @TODO Don't use \"any\" here\nfunction getField<T>(field: any, value: any, onChange: any, colors?: TColors) {\n  switch (field.type) {\n    case 'date':\n      return <FieldWrapper<Date, T> {...{ colors, field, formValue: value, onChange }} />;\n    case 'number':\n      return <FieldWrapper<number, T> {...{ colors, field, formValue: value, onChange }} />;\n    case 'files':\n      return <FieldWrapper<File[], T> {...{ colors, field, formValue: value, onChange }} />;\n    case 'check':\n      return <FieldWrapper<boolean, T> {...{ colors, field, formValue: value, onChange }} />;\n    case 'tags':\n      return <FieldWrapper<string[], T> {...{ colors, field, formValue: value, onChange }} />;\n    default:\n      return <FieldWrapper<string, T> {...{ colors, field, formValue: value, onChange }} />;\n  }\n}\n\nconst renderLabel = (field: TField<any, any>, colors: TForm<any>['colors']) => {\n  return (\n    <Fragment>\n      <label style={{ color: colors?.accent || Colors.ACCENT }}>{field.label}</label>\n      {field.help && (\n        <p style={{ fontSize: 'small' }}>\n          <Markdown text={field.help} inline />\n        </p>\n      )}\n    </Fragment>\n  );\n};\n\n/**\n * Intermediate component to let field handlers receive form data without passing\n * any form info to the Field class itself. This way <Field/> does not need to know about <Form/>\n */\nfunction FieldWrapper<T, F>(props: {\n  field: TField<T, F>;\n  formValue: Partial<F>;\n  onChange: (field: TField<T, F>, value: T, isValid: boolean) => void;\n  colors?: TColors;\n}) {\n  const ref = createRef<Field<T, F>>();\n  const onChange = (value: T, isValid: boolean) => props.onChange(props.field, value, isValid);\n  const validator = async (value?: T): Promise<string[]> => {\n    return validateField(props.field, value, props.formValue);\n  };\n  useEffect(() => {\n    ref.current?.validate();\n  }, [props.formValue]);\n  return (\n    <Field<T, F>\n      {...props.field}\n      colors={props.colors}\n      formValue={props.formValue}\n      ref={ref}\n      value={props.formValue[props.field.name as any] as any}\n      onChange={onChange}\n      validator={validator}\n    />\n  );\n}\n\nasync function validateField<T, F>(\n  field: TField<T, F>,\n  value: T | undefined,\n  formValue?: Partial<F>\n): Promise<string[]> {\n  if (field.required && !value) return ['Required field'];\n  if (!field.validator || !value) return [];\n  return field.validator(value, formValue || {});\n}\n","import { clone } from 'lodash';\nimport React, { Component, Fragment } from 'react';\nimport { BasicForm } from './BasicForm';\nimport { flatten, unflatten } from './modules';\nimport { TField, TForm } from './types';\n\ntype State<T> = {\n  fields: TForm<T>['fields'];\n  isValid: boolean;\n  value: Partial<T> & { [key: string]: any };\n};\n\nexport class DynamicForm<T> extends Component<TForm<T>, State<T>> {\n  constructor(props: TForm<T>) {\n    super(props);\n    this.state = {\n      fields: [],\n      isValid: false,\n      value: flatten(props.value || {}) as any,\n    };\n    console.log('FLATTEN', this.state);\n    cleanFields(props.fields, this.state.value).then((fields) => this.setState({ fields }));\n  }\n\n  private onChange: TForm<T>['onChange'] = async (value, isValid) => {\n    const fields = await cleanFields(this.props.fields, value);\n    value = cleanValue(value, fields);\n    this.setState({ fields, isValid, value });\n    this.props.onChange(unflatten(value), isValid);\n  };\n\n  public componentDidUpdate = (prevProps: TForm<T>) => {\n    if (prevProps.value !== this.props.value || prevProps.fields !== this.props.fields) {\n      const value = flatten(this.props.value || {}) as any;\n      cleanFields(this.props.fields, this.props.value).then((fields) => this.setState({ fields, value }));\n    }\n  };\n\n  public render = () => {\n    return (\n      <Fragment>\n        <BasicForm {...this.props} {...this.state} onChange={this.onChange} />\n      </Fragment>\n    );\n  };\n}\n\n// eslint-disable-next-line complexity\nasync function cleanFields<T>(\n  fields: TForm<T>['fields'],\n  formValue?: Partial<T>,\n  depth: number = 0\n): Promise<TForm<T>['fields']> {\n  let nextFields: TForm<T>['fields'] = [];\n\n  // eslint-disable-next-line complexity\n  const insertField = async (f: TField<any, any>) => {\n    let isPresent = false;\n    if (f.when) {\n      const promises = f.when.map((condition) => condition(formValue || {}));\n      const partials = await Promise.all(promises);\n      isPresent = partials.every((re) => !!re);\n    } else {\n      isPresent = true;\n    }\n    if (!isPresent) return;\n\n    if (!f.fields) {\n      nextFields.push(f as any);\n      return;\n    }\n\n    let subfields = await cleanFields(f.fields || [], formValue?.[f.name as any] || {}, (f.depth || 0) + 1);\n\n    if (f.length) {\n      const length = f.length(formValue || {});\n      for (let i = 0; i < length; i++) {\n        nextFields.push({\n          depth: f.depth || 0,\n          label: `${f.label || f.name} (${i + 1})`,\n        });\n        for (const sf of subfields) {\n          await insertField({\n            ...sf,\n            depth: (sf.depth || 0) - 1,\n            label: sf.label || sf.name,\n            name: sf.name && (`${f.name}.${i}.${sf.name}` as any),\n          });\n        }\n      }\n    } else {\n      nextFields.push({\n        depth: f.depth,\n        label: `${f.label || f.name}`,\n      });\n      for (const sf of subfields) {\n        await insertField({\n          ...sf,\n          depth: sf.depth || 0,\n          label: sf.label || sf.name,\n          name: sf.name && (`${f.name}.${sf.name}` as any),\n        });\n      }\n    }\n  };\n\n  for (const f of fields) {\n    await insertField({ ...f, depth });\n  }\n  return nextFields;\n}\n\nfunction cleanValue<T>(value: Partial<T>, fields: TForm<any>['fields']): Partial<T> {\n  const keys = fields.reduce((accum, f) => {\n    if (f.name) accum[f.name] = true;\n    return accum;\n  }, {} as { [key: string]: boolean });\n  const nextValue = clone(value);\n  Object.keys(nextValue).forEach((key) => {\n    if (!keys[key]) delete nextValue[key];\n  });\n  return nextValue;\n}\n","import React from 'react';\nimport { Form, TForm } from 'formelio';\n\nconst title = 'Basic form';\n\nconst description = `\nThis is a very simple use case: a login form. Take a look at how state changes when\nfields are modified. You'll notice that browser's *autofill* works out of the box.\n`;\n\ntype TValue = {\n  email: string;\n  password: string;\n  accept: boolean;\n};\n\ntype Props = {\n  value: TForm<TValue>['value'];\n  onChange: TForm<TValue>['onChange'];\n};\n\nconst Component = (props: Props) => {\n  const { value, onChange } = props;\n  return <Form<TValue> {...{ fields, onChange, value }} />;\n};\n\nconst initialState = {};\n\nconst fields: TForm<TValue>['fields'] = [\n  { name: 'email', required: true },\n  { name: 'password', required: true, type: 'password' },\n  { name: 'accept', required: true, type: 'check', label: 'I accept [whatever](https://google.com)' },\n];\n\nconst tileClass = 'is-light';\n\nexport default {\n  Component,\n  description,\n  source: { fields, initialState },\n  tileClass,\n  title,\n};\n","import React from 'react';\nimport { Form, TForm } from 'formelio';\n\nconst title = 'Fields size';\n\nconst description = `\nYou can *suggest* field sizes, using \\`size\\` property. If the screen is large\nenough to respect your suggestion, Formelio will do it. Otherwise it will ensure\nform is cool, even if you  suggest sizes just partially.\n`;\n\ntype TValue = {\n  name: string;\n  email: string;\n  surname1: string;\n  surname2: string;\n  birthday: Date;\n  phone: string;\n  accept: boolean;\n};\n\ntype Props = {\n  onChange: TForm<TValue>['onChange'];\n  value: TForm<TValue>['value'];\n};\n\nconst Component = (props: Props) => {\n  const { onChange, value } = props;\n  return <Form<TValue> {...{ fields, onChange, value }} />;\n};\n\nconst initialState = {};\n\nconst fields: TForm<TValue>['fields'] = [\n  {\n    name: 'name',\n    required: true,\n    size: 0.3,\n  },\n  {\n    name: 'surname1',\n    size: 0.3,\n  },\n  {\n    name: 'surname2',\n    size: 0.3,\n  },\n  {\n    name: 'email',\n  },\n  {\n    name: 'birthday',\n    type: 'date',\n    size: 0.5,\n  },\n  {\n    name: 'phone',\n    size: 0.5,\n  },\n  {\n    label: 'I accept whatever',\n    name: 'accept',\n    type: 'check',\n  },\n];\n\nconst tileClass = 'is-dark';\n\nexport default {\n  Component,\n  description,\n  source: { fields, initialState },\n  tileClass,\n  title,\n};\n","import React, { Fragment } from 'react';\nimport { Form, TForm } from 'formelio';\nimport cities from '../data/geo/municipios.json';\n\nconst title = 'Autocompletable dropdown';\n\nconst description = `\nThis example shows how to use dropdowns with autocomplete support.\nPerfect for huge lists of items, helping users to find the proper list item.\n`;\n\ntype TValue = {\n  city: string;\n  cities: string[];\n};\n\ntype Props = {\n  value: TForm<TValue>['value'];\n  onChange: TForm<TValue>['onChange'];\n};\n\nconst Component = (props: Props) => {\n  const { onChange, value } = props;\n  return (\n    <Fragment>\n      <Form<TValue> {...{ fields, onChange, value }} />\n    </Fragment>\n  );\n};\n\nconst initialState = {\n  cities: ['Catarroja', 'El Sotillo'],\n  city: 'El Sotillo',\n};\n\nconst found = {};\nconst citiesOptions = cities\n  .filter(({ name }) => {\n    const isFound = !found[name];\n    found[name] = true;\n    return isFound;\n  })\n  .slice(0, 10)\n  .map(({ name }) => ({ label: name, value: name }));\nconst fields: TForm<TValue>['fields'] = [\n  { name: 'city', options: citiesOptions },\n  { name: 'cities', options: citiesOptions, type: 'tags' },\n];\n\nconst tileClass = 'is-info';\n\nexport default {\n  Component,\n  description,\n  source: { fields, initialState },\n  tileClass,\n  title,\n};\n","import React, { Fragment } from 'react';\nimport { Form, TForm } from 'formelio';\n\nconst title = 'Dynamic form';\n\nconst description = `\nSometimes you want to show a field more than once, but you don't know how many times because\nit depends on user input. This kind of dynamic forms are perfect for \\`Formelio\\`.\n`;\n\ntype TValue = {\n  childrenCount: number;\n  children: Array<{ name: string; birthdate: Date }>;\n};\n\ntype Props = {\n  value: TForm<TValue>['value'];\n  onChange: TForm<TValue>['onChange'];\n};\n\nconst Component = (props: Props) => {\n  const { onChange, value } = props;\n  return (\n    <Fragment>\n      <Form<TValue> {...{ fields, onChange, value }} />\n    </Fragment>\n  );\n};\n\nconst initialState = {\n  childrenCount: 2,\n  children: [\n    {\n      name: 'Sam',\n      birthdate: '2001-02-12',\n    },\n    {\n      name: 'Karen',\n      birthdate: '1995-01-03',\n    },\n  ],\n};\n\nconst fields: TForm<TValue>['fields'] = [\n  {\n    name: 'childrenCount',\n    type: 'number',\n  },\n  {\n    name: 'children',\n    length: (formValue: Partial<TValue>) => formValue.childrenCount || 0,\n    fields: [\n      { name: 'name', size: 0.5 },\n      { name: 'birthdate', type: 'date', size: 0.5 },\n    ],\n  },\n];\n\nconst tileClass = 'is-light';\n\nexport default {\n  Component,\n  description,\n  source: { fields, initialState },\n  tileClass,\n  title,\n};\n","import React from 'react';\nimport ReactMarkdownWithHtml from 'react-markdown/with-html';\n\nconst LinkRenderer = (props: any) => (\n  <a href={props.href} target=\"_blank\" rel=\"noopener noreferrer\">\n    {props.children}\n  </a>\n);\n\nconst Markdown = (props: { text: string; inline?: boolean }) => (\n  <ReactMarkdownWithHtml\n    disallowedTypes={props.inline ? ['paragraph'] : []}\n    allowDangerousHtml\n    unwrapDisallowed\n    renderers={{ link: LinkRenderer }}\n  >\n    {props.text}\n  </ReactMarkdownWithHtml>\n);\n\nexport default Markdown;\n","import React, { useState } from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { dark, github } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport 'formelio/dist/index.css';\nimport { TForm } from 'formelio';\nimport stringify from 'json-stringify-pretty-compact';\n// import cl from 'classnames';\n\nimport Login from './Login';\nimport Basic from './Basic';\nimport Other from './Other';\nimport Dynamic from './Dynamic';\nimport Markdown from '../Markdown';\n\nconst EXAMPLES = [Login, Dynamic, Basic, Other, Dynamic];\n\nconst Examples = () => {\n  return (\n    <div>\n      {EXAMPLES.map((props, i) => (\n        <Example key={i} theme={i % 0 ? 'is-dark' : 'is-light'} {...props} />\n      ))}\n    </div>\n  );\n};\n\nconst Example = (props: any) => {\n  const [isValid, setIsValid] = useState(false);\n  const [value, setValue] = useState(props.source.initialState);\n  const [theme] = useState(props.tileClass || 'is-light');\n\n  const onChange: TForm<any>['onChange'] = async (value, isValid) => {\n    setValue(value);\n    setIsValid(isValid);\n  };\n\n  return (\n    <div className=\"content\" style={{ marginBottom: '5em' }}>\n      {props.title && (\n        <h4>\n          <Markdown inline text={props.title} />\n        </h4>\n      )}\n      {props.description && <Markdown text={props.description} />}\n      <div className=\"columns\">\n        <div className=\"column\" style={{ display: 'flex', overflow: 'auto' }}>\n          <div className={`notification ${theme} is-light`} style={{ flex: 1 }}>\n            <div style={{ minHeight: '100%', display: 'flex', flexDirection: 'column' }}>\n              <div style={{ flex: 1 }}>\n                {/* <div className=\"tabs is-centered\">\n                  <ul style={{ margin: 0 }}>\n                    {['light', 'dark'].map((the) => (\n                      <li key={the} className={cl({ 'is-active': theme === `is-${the}` })}>\n                        <a style={{ textDecoration: 'none' }} onClick={() => setTheme(`is-${the}`)}>\n                          {the}\n                        </a>\n                      </li>\n                    ))}\n                  </ul>\n                </div> */}\n                <props.Component onChange={onChange} value={value} />\n              </div>\n              <div style={{ overflow: 'auto', marginTop: '2em' }}>\n                <SyntaxHighlighter language=\"javascript\" style={theme === 'is-dark' ? dark : github}>\n                  {'// State\\n\\n' + stringify({ isValid, value }, { indent: 2, maxLength: 50 })}\n                </SyntaxHighlighter>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"column\" style={{ overflow: 'auto', display: 'flex' }}>\n          <SyntaxHighlighter language=\"javascript\" style={{ ...github, flex: 1 }}>\n            {`// Source code\\n\\n` + genSource(props.source)}\n          </SyntaxHighlighter>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst genSource = ({ fields, initialState }: typeof Basic.source) =>\n  `\nimport React, { useState } from 'react';\nimport { Form } from 'formelio';\n\nconst MyForm = () => {\n  const [isValid, setIsValid] = useState(false);\n  const [value, setValue] = useState(${indent(stringify(initialState, { indent: 2, maxLength: 50 }), 2).trim()});\n  const onChange = (value, isValid) => {\n    setValue(value);\n    setIsValid(isValid);\n  };\n  const fields = ${indent(stringify(fields, { indent: 2, maxLength: 80 }), 2).trim()};\n  return (\n    <Form {...{fields, value, onChange}} />\n  );\n}`.trim();\n\nconst indent = (code: string, level: number) =>\n  code\n    .split('\\n')\n    .map((l) => `${' '.repeat(level)}${l}`)\n    .join('\\n')\n    .trimEnd();\n\nexport default Examples;\n","import React from 'react';\nimport Examples from './Examples';\n// eslint-disable-next-line import/no-webpack-loader-syntax\n// import { default as Features } from '!!raw-loader!./Features.md';\n// eslint-disable-next-line import/no-webpack-loader-syntax\n// import { default as Definitions } from '!!raw-loader!./Definitions.md';\nimport 'formelio/dist/index.css';\n// import Markdown from './Markdown';\n\nconst App = () => {\n  return (\n    <div className=\"container\">\n      {/* <section className=\"content\">\n        <Markdown text={Features} />\n      </section>\n      <section className=\"content\">\n        <Markdown text={Definitions} />\n      </section> */}\n      <section className=\"content\">\n        <h2>Examples</h2>\n        <p>The best way to learn is by example, so here are some cool use cases to see how to use Formelio.</p>\n        <Examples />\n      </section>\n    </div>\n  );\n};\n\nexport default App;\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}