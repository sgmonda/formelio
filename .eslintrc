{
  "parser": "@typescript-eslint/parser",
  "extends": [
    "eslint:recommended",
    // "plugin:prettier/recommended",
    "plugin:react/recommended"
  ],
  "env": {
    "browser": true,
    "jest": true,
    "node": true,
    "es6": true
  },
  "parserOptions": {
    "ecmaVersion": 2020,
    "ecmaFeatures": {
      "legacyDecorators": true,
      "jsx": true
    },
    "sourceType": "module"
  },
  "plugins": ["@typescript-eslint", "import", "react", "json", "cypress"],
  "settings": {
    "react": {
      "version": "16"
    },
    "import/resolver": {
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx", ".d.ts"]
      }
    }
  },
  "rules": {
    "space-before-function-paren": 0,
    "react/jsx-handler-names": 0,
    "react/jsx-fragments": 0,
    "react/no-unused-prop-types": 0,
    "import/export": 0,

    "camelcase": "off",
    // "comma-dangle": ["error", "always-multiline"],
    "consistent-return": "off",
    "complexity": ["error", 10],
    "global-require": "off",
    "eqeqeq": "error",
    "max-len": ["error", 120, { "tabWidth": 2, "ignoreComments": true }],
    "max-lines": ["error", 350],
    "no-await-in-loop": "off",
    "no-case-declarations": "off",
    "no-cond-assign": "off",
    "no-continue": "off",
    "no-multiple-empty-lines": ["error", { "max": 1 }],
    "no-restricted-syntax": "off",
    "no-return-assign": ["error", "except-parens"],
    "no-param-reassign": "off",
    "no-plusplus": "off",
    "no-underscore-dangle": "off",
    "import/no-dynamic-require": "off",
    "import/no-extraneous-dependencies": ["error", { "devDependencies": true }],
    "import/no-unresolved": "off", // Typescript already takes care of this, and works with raw-loader. This doesn't
    "import/prefer-default-export": "off",
    "object-property-newline": "off",
    "object-curly-newline": ["error", { "consistent": true }],
    "radix": "off",
    "no-unused-vars": "warn",
    "@typescript-eslint/no-unused-vars": ["warn"],
    "react/prop-types": "off",
    "react/react-in-jsx-scoe": "off", // React must be in global scope, so we don't need to import it
    "guard-for-in": "off",
    "semi": "error",
    "sort-keys": "warn",
    "sort-vars": "warn",
    "sort-imports": [
      "warn",
      {
        "ignoreCase": true,
        "ignoreDeclarationSort": true,
        "ignoreMemberSort": false
      }
    ]
  }
}
